{"version":3,"sources":["redux/slices/coineusSlice.js","redux/services/dexscreener.js","redux/store.js","utils/promisify.js","utils/get_prices.js","utils/get_balances.js","theme.js","components/SwapInput.js","utils/currency_format.js","images/logo192.png","components/CoineusLoading.js","views/Swap.js","components/Panel.js","views/Raffles/LightningRaffles.js","utils/format.js","views/Raffles/LightningRaffleGame.js","components/BurntSupply.js","views/Stats.js","LightningStrikes.js","hooks/useWeb3Modal.js","index.js"],"names":["initialState","wallet","address","undefined","chain","type","info","avax","fuse","bnb","eth","lp","balances","staked","prices","totals","pairs","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","tokens","coineusSlice","createSlice","name","reducers","updateWalletChain","state","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","contract_address","updateLPInfo","updateBalances","balance","updateStaked","updatePrices","price","updateTotals","total","Object","entries","map","_ref","_ref2","_slicedToArray","inUSD","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","concat","getToken","token_address","configureStore","useGetPairQuery","useGetTokenQuery","reducer","_defineProperty","coineus","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","catch","err","req","request","data","add","execute","all","getPairPrices","_store$coineus","store","getState","Web3","fusd_fuse","Contract","unipair_abi","ceus_fuse","ceus_lit","methods","getReserves","_resp","fusd_fuse_reserves","ceus_fuse_reserves","ceus_lit_reserves","dispatch","reserve1","reserve0","inFuse","getFUSE","web3AVAX","usdc_avax","dgnx_avax","callsAVAX","_resp2","usdc_avax_reserves","dgnx_avax_reserves","avax_price","Math","pow","inAVAX","getAVAX","web3BSC","bnb_busd","feg_bnb","srg_bnb","srg_abi","lit_bnb","callsBNB","calculatePrice","_resp3","bnb_busd_reserves","feg_bnb_reserves","srg_bnb_price","lit_bnb_price","bnb_price","inBNB","inETH","getBNB","web3ETH","eth_usdc","srg_eth","bbk_eth","bbk_abi","feg_eth","callsETH","_resp4","eth_usdc_reserves","srg_eth_price","bbk_srg_price","feg_eth_reserves","eth_price","console","log","getETH","getUserBalances","wallet_address","ceus_contract","coineus_abi","fusd_contract","volt_contract","fsb_contract","lit_contract","btc_contract","eth_contract","bnb_contract","wfuse_contract","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","ceus_lit_contract","uni_pair_abi","ceus_fuse_contract","fuse_lit_contract","getBalance","balanceOf","delegatedAmount","totalSupply","fuse_balance","ceus_balance","fusd_balance","volt_balance","staked_fuse_with_coineus","fsb_balance","lit_balance","btc_balance","eth_balance","bnb_balance","wfuse_balance","ceus_lit_balance","ceus_lit_totalSupply","ceus_wfuse_balance","ceus_wfuse_reserves","ceus_wfuse_totalSupply","fuse_lit_balance","fuse_lit_reserves","fuse_lit_totalSupply","token0","token1","share","usdc_contract","dgnx_contract","avax_balance","usdc_balance","dgnx_balance","feg_contract","srg_contract","busd_contract","usdt_contract","callsBSC","feg_balance","srg_balance","busd_balance","usdt_balance","bbks_contract","bbks_balance","theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","secondary","useNetworkChip","makeStyles","networkChip","borderRadius","marginLeft","position","top","height","width","display","backgroundSize","backgroundImage","SwapInput","props","label","max","disabled","value","onChange","startAdornment","endAdornment","_jsx","FormControl","style","backgroundColor","border","borderColor","fullWidth","children","TextField","variant","inputMode","autoComplete","autoCorrect","spellCheck","pattern","placeholder","InputProps","inputProps","textAlign","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","CoineusLoading","Dialog","open","_jsxs","DialogContent","margin","src","cns_logo","alt","CircularProgress","color","size","thickness","Typography","marginTop","pairAddress","routerAddress","Swap","_wallet$prices$fuse","_wallet$prices$fuse$n","_useSelector","useSelector","useTheme","_useState","useState","_useState2","amountIn","setAmountIn","_useState3","_useState4","amountOut","setAmountOut","_useState5","_useState6","pending","setPending","_useState7","_useState8","reserves","setReserves","_useState9","_useState10","amtRecieved","setAmtRecieved","_useState11","_useState12","txHash","setTxHash","_useState13","_useState14","txCost","setTxCost","useEffect","router_abi","getAmountOut","utils","toWei","uni_abi","interval","setInterval","clearInterval","swap","_asyncToGenerator","_regeneratorRuntime","mark","_callee","contract","gasPrice","wrap","_context","prev","next","window","provider","getGasPrice","sent","swapExactETHForTokens","toString","Date","getTime","send","from","gas","once","tx","on","error","receipt","hexToNumberString","events","raw","gasUsed","effectiveGasPrice","stop","apply","arguments","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","Paper","padding","ev","target","InputAdornment","Button","paper","startIcon","Avatar","float","native","onClick","_Fragment","Divider","marginBottom","Link","textDecorationColor","href","substr","Panel","LightningRaffles","displayUSD","setDisplayUSD","chainTab","setChainTab","ToggleButtonGroup","exclusive","ToggleButton","CurrencyBitcoinIcon","AttachMoneyIcon","Tabs","val","Tab","id","RaffleGameInfo","abi","NATIVE_NATIVE_ABI","network","NATIVE_TOKEN_JACKPOT_ABI","TOKEN_TOKEN_ABI","TOKEN_TOKEN_JACKPOT_ABI","_wallet$prices$networ","_wallet$prices$networ2","nextDraw","raffle","setRaffle","classes","getRaffleGameInfo","raffle_contract","getRaffleInfo","getTokens","getPlayers","jp","raffleInfo","players","bal","token_contract","IERC20","jackpot","parseInt","raffle_type","admin_fee","cap","ticketCost","ticket_cost","entry","decimals","adminFee","raffleID","raffle_id","entriesAllowed","entries_allowed","next_draw","nextDrawInterval","next_draw_interval_hours","totalFees","total_fees","totalWinnings","total_winnings","raffleType","raffleState","raffle_state","array","drawingTime","setDrawingTime","msToHMS","timeToNextDraw","interval1","RaffleDetailsLoading","List","disablePadding","ListItem","disableGutters","ListItemAvatar","className","clsx","ListItemText","symbol","primaryTypographyProps","fontWeight","RouterLink","to","textDecoration","endIcon","filter","v","BoltIcon","Skeleton","d","ms","m","s","padStart","BigNumber","multipliedBy","LightningRaffleGame","_useParams","useParams","allowance","setAllowance","entrySupply","setEntrySupply","numTickets","setNumTickets","_adminFee","_setAdminFee","_jackpotCap","_setJackpotCap","_useState15","_useState16","_maxEntries","_setMaxEntries","_useState17","_useState18","_nextDrawIntervalHours","_setNextDrawIntervalHours","_useState19","_useState20","_sendFeeTo","_setSendFeeTo","_useState21","_useState22","_ticketCostEther","_setTicketCostEther","_useState23","_useState24","_ticketCostWei","_setTicketCostWei","_useState25","_useState26","_fundRounds","_setFundRounds","callback","getStatsByAddress","playerStats","jackpot_contract","entry_contract","calls2","getGameHistoryByRaffleID","resolve","jackpotTokenBalance","history","_allowance","roundsRemaining","send_fee_to","previousWinner","winner","previousJackpot","_useState27","_useState28","checkAllowance","amount","reject","increaseAllowance","approve","checkChain","changeNetwork","chainID","t0","abrupt","ethereum","method","params","chainId","toHex","Fab","component","left","zIndex","ArrowBackIcon","startRaffle","openRaffle","closeRaffle","resetNextDraw","setAdminFee","setJackpotCap","setMaxEntries","setNextDrawIntervalHours","setSendFeeTo","setTicketCostEther","setTicketCostWei","transfer","secondaryTypographyProps","getOccurrence","getOdds","Slider","step","marks","min","multiEnter","enterNativeMulti","enterRaffle","enterMulti","getButtonLabel","pickWinner","e","wins","winnings","dense","getPlayersList","currentPlayer","nextPlayer","list","found","player","i","push","toLowerCase","useStyles","xyplot","BurnSupply","supply","burned","divider","PI","aBurned","angles","burnedStart","burnedEnd","supplyStart","supplyEnd","colors","FlexibleWidthXYPlot","xDomain","yDomain","right","bottom","ArcSeries","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","fontSize","StatListItem","icon","Autorenew","Whatshot","ListItemIcon","paddingLeft","web3FUSE","callsFUSE","Stats","setSupply","setBurned","supplyFuse","setSupplyFuse","burnedFuse","setBurnedFuse","bbks_supply","LightningStrikes","_wallet$address","useDispatch","navTab","setNavTab","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","_context5","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","changeWeb3Modal","accounts","subscribeProvider","getAccounts","net","getId","t1","_x","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","close","clearCachedProvider","ThemeProvider","CssBaseline","Router","AppBar","Toolbar","logo","flexGrow","getChainLogo","connectWallet","Routes","Route","path","exact","element","sx","elevation","BottomNavigation","showLabels","event","newValue","BottomNavigationAction","InsightsIcon","marginRight","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"ky3FAEMA,EAAe,CACjBC,OAAQ,CACJC,aAASC,EACTC,WAAOD,EACPE,UAAMF,EAENG,KAAM,CACFC,KAAM,CAAC,EACPC,KAAM,CAAC,EACPC,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVC,GAAI,CACAJ,KAAM,CAAC,EACPC,KAAM,CAAC,EACPC,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVE,SAAU,CACNL,KAAM,CAAC,EACPC,KAAM,CAAC,EACPC,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVG,OAAQ,CACJN,KAAM,CAAC,EACPC,KAAM,CAAC,EACPC,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVI,OAAQ,CACJP,KAAM,CAAC,EACPC,KAAM,CAAC,EACPC,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVK,OAAQ,CACJR,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,IAGbM,MAAO,CACHC,aAAc,6CACdC,aAAc,6CACdC,aAAc,6CACdC,aAAc,6CACdC,YAAa,6CACbC,YAAa,6CAEbC,YAAa,6CACbC,YAAa,6CACbC,YAAa,6CAEbC,aAAc,6CACdC,aAAc,6CAEdC,YAAa,6CAEbC,YAAa,6CACbC,WAAY,6CAEZC,WAAY,6CACZC,WAAY,8CAEhBC,IAAK,CACDzB,KAAM,uBACND,KAAM,wCACNE,IAAK,qCACLC,IAAK,+BAETwB,OAAS,CAAC,GAGRC,EAAeC,YAAY,CAC7BC,KAAM,UACNrC,eACAsC,SAAU,CAENC,kBAAiB,SAACC,EAAOC,GACrBD,EAAMvC,OAAOG,MAAQqC,EAAOC,OAChC,EAEAC,oBAAmB,SAACH,EAAOC,GACvBD,EAAMvC,OAAOC,QAAUuC,EAAOC,OAClC,EAEAE,yBAAwB,SAACJ,EAAOC,GAC5BD,EAAMvC,OAAOI,KAAOoC,EAAOC,OAC/B,EAEAG,WAAU,SAACL,EAAOC,GACVD,EAAMvC,OAAOK,KAAKmC,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,oBACvDN,EAAMvC,OAAOK,KAAKmC,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoB,CAAC,GAEhFN,EAAMvC,OAAOK,KAAKmC,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoBL,EAAOC,QAAQpC,IAC9F,EAEAyC,aAAY,SAACP,EAAOC,GACZD,EAAMvC,OAAOU,GAAG8B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,oBACrDN,EAAMvC,OAAOU,GAAG8B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoB,CAAC,GAE9EN,EAAMvC,OAAOU,GAAG8B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoBL,EAAOC,QAAQ/B,EAC5F,EAEAqC,eAAc,SAACR,EAAOC,GACdD,EAAMvC,OAAOW,SAAS6B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,oBAC3DN,EAAMvC,OAAOW,SAAS6B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoB,GAEnFN,EAAMvC,OAAOW,SAAS6B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoBL,EAAOC,QAAQO,OAClG,EAEAC,aAAY,SAACV,EAAOC,GACZD,EAAMvC,OAAOY,OAAO4B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,oBACzDN,EAAMvC,OAAOY,OAAO4B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoB,GAEjFN,EAAMvC,OAAOY,OAAO4B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoBL,EAAOC,QAAQ7B,MAChG,EAEAsC,aAAY,SAACX,EAAOC,GACZD,EAAMvC,OAAOa,OAAO2B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,oBACzDN,EAAMvC,OAAOa,OAAO2B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoB,CAAC,GAElFN,EAAMvC,OAAOa,OAAO2B,EAAOC,QAAQtC,OAAOqC,EAAOC,QAAQI,kBAAoBL,EAAOC,QAAQU,KAChG,EAEAC,aAAY,SAACb,EAAOC,GAChB,IAAIa,EAAQ,EACZC,OAAOC,QAAQhB,EAAMvC,OAAOW,SAAS6B,EAAOC,UAAUe,KAAI,SAAAC,GAAiC,IAADC,EAAAC,YAAAF,EAAA,GAA9BZ,EAAgBa,EAAA,GAACV,EAAOU,EAAA,GAIhF,OAHGnB,EAAMvC,OAAOa,OAAO2B,EAAOC,SAASI,KACnCQ,GAASL,EAAQT,EAAMvC,OAAOa,OAAO2B,EAAOC,SAASI,GAAkBe,OAEpE,CAACf,EAAiBG,EAC7B,IACAM,OAAOC,QAAQhB,EAAMvC,OAAOY,OAAO4B,EAAOC,UAAUe,KAAI,SAAAK,GAAiC,IAADC,EAAAH,YAAAE,EAAA,GAA9BhB,EAAgBiB,EAAA,GAACd,EAAOc,EAAA,GAI9E,OAHGvB,EAAMvC,OAAOa,OAAO2B,EAAOC,SAASI,KACnCQ,GAASL,EAAQT,EAAMvC,OAAOa,OAAO2B,EAAOC,SAASI,GAAkBe,OAEpE,CAACf,EAAiBG,EAC7B,IAEAT,EAAMvC,OAAOc,OAAO0B,EAAOC,SAAWY,CAC1C,EAEAU,YAAW,SAACxB,GACRA,EAAMvC,OAAOG,WAAQD,EACrBqC,EAAMvC,OAAOC,aAAUC,EACvBqC,EAAMvC,OAAOI,UAAOF,CACxB,EAEA8D,aAAY,SAACzB,EAAOC,GAChBD,EAAMN,OAASgC,KAAKC,MAAMD,KAAKE,UAAU3B,EAAOC,SACpD,KAKD2B,EAeHlC,EAAamC,QAdb/B,EAAiB8B,EAAjB9B,kBACAI,EAAmB0B,EAAnB1B,oBACAC,EAAwByB,EAAxBzB,yBAGAG,GADUsB,EAAVxB,WACYwB,EAAZtB,cACAC,EAAcqB,EAAdrB,eACAE,EAAYmB,EAAZnB,aACAC,EAAYkB,EAAZlB,aACAE,EAAYgB,EAAZhB,aAEAW,EAAWK,EAAXL,YAKW7B,GAHCkC,EAAZJ,aAGW9B,EAAoB,S,wBCpLtBoC,EAAiBC,YAAU,CACpCC,YAAa,iBACbC,UAAWC,YAAe,CAAEC,QAAS,4CACrCC,UAAW,SAAAC,GAAO,MAAK,CACnBC,QAASD,EAAQE,MAAM,CACnBA,MAAO,SAAAtB,GAAA,IAAEuB,EAAQvB,EAARuB,SAAUC,EAAYxB,EAAZwB,aAAY,eAAAC,OAAeF,EAAQ,KAAAE,OAAID,EAAY,IAE1EE,SAAUN,EAAQE,MAAM,CACpBA,MAAO,SAACK,GAAa,gBAAAF,OAAeE,EAAa,IAExD,ICRUC,GDWsCf,EAAtCgB,gBAAsChB,EAArBiB,iBCXjBF,YAAe,CAC1BG,QAAOC,YAAA,CACHC,QAASC,GACRrB,EAAeE,YAAcF,EAAekB,SAEjDI,WAAY,SAAAC,GAAoB,OAAIA,IAAuBX,OACvDZ,EAAesB,WAClB,K,0BCXQE,EAAmB,SAACC,EAAMC,GACnC,IAAIC,EAAQ,IAAIF,EAAKG,aAEjBC,EAAWH,EAAMxC,KAAI,SAAA4C,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GAErB,GAAGH,aAAgBC,QACf,OAAOD,EAAKI,MAAK,SAAAC,GAAI,OAAEH,EAAIG,EAAK,IAAEC,OAAM,SAAAC,GAAG,OAAEJ,EAAII,EAAI,IAGzD,IAAIC,EAAMR,EAAKS,QAAQ,CAAC,GAAG,SAACF,EAAKG,GAC1BH,EAAKJ,EAAII,GACPL,EAAIQ,EACb,IACAb,EAAMc,IAAIH,EACd,GACJ,IAGA,OAFAX,EAAMe,UAECX,QAAQY,IAAId,EACvB,ECXe,SAASe,IACpB,IACAC,EADeC,EAAMC,WACO3B,QAArB3E,EAAKoG,EAALpG,MAAOiB,EAAGmF,EAAHnF,KAQlB,SAAiBjB,EAAOiB,GAGpB,IAAM+D,EAAO,IAAIuB,IAAKtF,GAChBuF,EAAY,IAAIxB,EAAKtF,IAAI+G,SAASC,EAAa1G,EAAME,cACrDyG,EAAY,IAAI3B,EAAKtF,IAAI+G,SAASC,EAAa1G,EAAMG,cACrDyG,EAAW,IAAI5B,EAAKtF,IAAI+G,SAASC,EAAa1G,EAAMM,aAEpD2E,EAAQ,CACVuB,EAAUK,QAAQC,cAAczB,KAChCsB,EAAUE,QAAQC,cAAczB,KAChCuB,EAASC,QAAQC,cAAczB,MAGnCN,EAAiBC,EAAMC,GAClBQ,MAAK,SAAAC,GACF,IAAAqB,EAAAnE,YAII8C,EAAI,GAHJsB,EAAkBD,EAAA,GAClBE,EAAkBF,EAAA,GAClBG,EAAiBH,EAAA,GAIrBV,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,SAClBM,MAAO,CACHS,MAAOmE,EAAmBI,SAASJ,EAAmBK,SACtDC,OAAQ,MAKhBjB,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAOmE,EAAmBI,SAASJ,EAAmBK,SACtDC,OAAQ,MAKhBjB,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,EACPyE,OAAQN,EAAmBK,SAASL,EAAmBI,aAK/Df,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACHkF,OAAQL,EAAmBI,SAASJ,EAAmBG,SACvDvE,MAAOoE,EAAmBI,SAASJ,EAAmBG,SAAWJ,EAAmBI,SAASJ,EAAmBK,aAKxHhB,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACHkF,OAAQL,EAAmBI,SAASJ,EAAmBG,SACvDvE,MAAOqE,EAAkBG,SAASH,EAAkBE,UAAYH,EAAmBI,SAASJ,EAAmBG,SAAWJ,EAAmBI,SAASJ,EAAmBK,cAIjLhB,EAAMc,SAAS9E,EAAa,QAChC,GACR,CAhFIkF,CAAQvH,EAAOiB,EAAIzB,MAkFvB,SAAiBQ,EAAOiB,GAIpB,IAAMuG,EAAW,IAAIjB,IAAKtF,GACpBwG,EAAY,IAAID,EAAS9H,IAAI+G,SAASC,EAAa1G,EAAMU,cACzDgH,EAAY,IAAIF,EAAS9H,IAAI+G,SAASC,EAAa1G,EAAMW,cAEzDgH,EAAY,CACdF,EAAUZ,QAAQC,cAAczB,KAChCqC,EAAUb,QAAQC,cAAczB,MAGpCN,EAAiByC,EAAUG,GACtBlC,MAAK,SAAAC,GACF,IAAAkC,EAAAhF,YAGI8C,EAAI,GAFJmC,EAAkBD,EAAA,GAClBE,EAAkBF,EAAA,GAGhBG,EAAaF,EAAmBT,SAASS,EAAmBR,SAAQW,KAAAC,IAAI,GAAI,IAGlF5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,SAClBM,MAAO,CACHS,MAAOkF,EACPG,OAAQ,MAKhB7B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,EACPqF,OAAQL,EAAmBR,SAASQ,EAAmBT,SAAQY,KAAAC,IAAI,GAAI,QAK/E5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,OACP0C,iBAAkB,6CAClBM,MAAO,CACH8F,OAAQJ,EAAmBV,SAASU,EAAmBT,UAAY,EACnExE,MAAOiF,EAAmBV,SAASU,EAAmBT,SAAWU,GAAc,MAIvF1B,EAAMc,SAAS9E,EAAa,QAEhC,GACR,CAxII8F,CAAQnI,EAAOiB,EAAI1B,MA0IvB,SAAgBS,EAAOiB,GAGnB,IAAMmH,EAAU,IAAI7B,IAAKtF,GACnBoH,EAAW,IAAID,EAAQ1I,IAAI+G,SAASC,EAAa1G,EAAMY,aACvD0H,EAAU,IAAIF,EAAQ1I,IAAI+G,SAASC,EAAa1G,EAAMgB,YACtDuH,EAAU,IAAIH,EAAQ1I,IAAI+G,SAAS+B,EAAS,8CAC5CC,EAAU,IAAIL,EAAQ1I,IAAI+G,SAAS+B,EAAS,8CAE5CE,EAAW,CACbL,EAASxB,QAAQC,cAAczB,KAC/BiD,EAAQzB,QAAQC,cAAczB,KAC9BkD,EAAQ1B,QAAQ8B,iBAAiBtD,KACjCoD,EAAQ5B,QAAQ8B,iBAAiBtD,MAGrCN,EAAiBqD,EAASM,GACrBjD,MAAK,SAAAC,GACF,IAAAkD,EAAAhG,YAKI8C,EAAI,GAJJmD,EAAiBD,EAAA,GACjBE,EAAgBF,EAAA,GAChBG,EAAaH,EAAA,GACbI,EAAaJ,EAAA,GAGXK,EAAYJ,EAAkBxB,SAASwB,EAAkBzB,SAG/Df,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,SAClBM,MAAO,CACHS,MAAOoG,EACPC,MAAO,MAKf7C,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQkG,EAAaf,KAAAC,IAAE,GAAI,GAAMgB,EACjCE,MAAQJ,EAAaf,KAAAC,IAAE,GAAI,OAKnC5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQmG,EAAahB,KAAAC,IAAE,GAAI,IAAOc,EAAaf,KAAAC,IAAE,GAAI,KAAOgB,EAC5DE,MAAQH,EAAahB,KAAAC,IAAE,GAAI,OAKnC5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQiG,EAAiBzB,SAASyB,EAAiB1B,SAAY6B,EAC/DC,MAAO,MAKf7C,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,MAKfwD,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,MAKfwD,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,MAIfwD,EAAMc,SAAS9E,EAAa,OAChC,GAER,CA1OI+G,CAAOpJ,EAAOiB,EAAIxB,KA4OtB,SAAgBO,EAAOiB,GAInB,IAAMoI,EAAU,IAAI9C,IAAKtF,GACnBqI,EAAW,IAAID,EAAQ3J,IAAI+G,SAASC,EAAa1G,EAAMa,aACvD0I,EAAU,IAAIF,EAAQ3J,IAAI+G,SAAS+B,EAASxI,EAAMc,YAClD0I,EAAU,IAAIH,EAAQ3J,IAAI+G,SAASgD,EAAS,8CAC5CC,EAAU,IAAIL,EAAQ3J,IAAI+G,SAASC,EAAa1G,EAAMe,YAEtD4I,EAAW,CACbL,EAASzC,QAAQC,cAAczB,KAC/BkE,EAAQ1C,QAAQ8B,iBAAiBtD,KACjCmE,EAAQ3C,QAAQ8B,iBAAiBtD,KACjCqE,EAAQ7C,QAAQC,cAAczB,MAGlCN,EAAiBsE,EAASM,GACrBlE,MAAK,SAAAC,GAEF,IAAAkE,EAAAhH,YAKI8C,EAAI,GAJJmE,EAAiBD,EAAA,GACjBE,EAAaF,EAAA,GACbG,EAAaH,EAAA,GACbI,EAAgBJ,EAAA,GAGdK,EAAYJ,EAAkBxC,SAASwC,EAAkBzC,SAAQY,KAAAC,IAAE,GAAI,IAG7E5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,SAClBM,MAAO,CACHS,MAAOoH,EACPd,MAAO,MAKf9C,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQiH,EAAa9B,KAAAC,IAAE,GAAI,GAAMgC,EACjCd,MAAQW,EAAa9B,KAAAC,IAAE,GAAI,OAKnC5B,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQkH,EAAa/B,KAAAC,IAAE,GAAI,KAAQ6B,EAAa9B,KAAAC,IAAE,GAAI,IAAMgC,EAC5Dd,MAAO,MAKf9C,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAQmH,EAAiB5C,SAAS4C,EAAiB3C,SAAY4C,EAC/Dd,MAAO,MAKf9C,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,MAKfwD,EAAMc,SAAShF,EAAa,CACxB/C,MAAO,MACP0C,iBAAkB,6CAClBM,MAAO,CACHS,MAAO,MAIfwD,EAAMc,SAAS9E,EAAa,OAEhC,IACCsD,MAAMuE,QAAQC,IAEvB,CAvUIC,CAAOpK,EAAOiB,EAAIvB,IACtB,C,uBCTe,SAAS2K,GAAgBC,GACpC,IACAlE,EADeC,EAAMC,WACO3B,QAAd1D,GAAFmF,EAALpG,MAAUoG,EAAHnF,UAES9B,IAAnBmL,IAUR,SAAiBtK,EAAOiB,EAAKqJ,GAEzB,IAAMtF,EAAO,IAAIuB,IAAKtF,GAChBsJ,EAAgB,IAAIvF,EAAKtF,IAAI+G,SAAS+D,GAAa,8CACnDC,EAAgB,IAAIzF,EAAKtF,IAAI+G,SAAS+D,GAAa,8CACnDE,EAAgB,IAAI1F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CACnDG,EAAe,IAAI3F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAClDI,EAAe,IAAI5F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAElDK,EAAe,IAAI7F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAClDM,EAAe,IAAI9F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAClDO,EAAe,IAAI/F,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAClDQ,EAAiB,IAAIhG,EAAKtF,IAAI+G,SAAS+D,GAAa,8CAEpDS,EAA0B,6CAC1BC,EAAmB,6CACnBC,EAAoB,IAAInG,EAAKtF,IAAI+G,SAAS2E,GAAeF,GAEzDG,EAAoB,IAAIrG,EAAKtF,IAAI+G,SAAS6E,EAAc,8CACxDC,EAAqB,IAAIvG,EAAKtF,IAAI+G,SAAS6E,EAAc,8CACzDE,EAAoB,IAAIxG,EAAKtF,IAAI+G,SAAS6E,EAAc,8CAExDrG,EAAQ,CACVD,EAAKtF,IAAI+L,WAAWnB,GACpBC,EAAc1D,QAAQ6E,UAAUpB,GAAgBjF,KAChDoF,EAAc5D,QAAQ6E,UAAUpB,GAAgBjF,KAChDqF,EAAc7D,QAAQ6E,UAAUpB,GAAgBjF,KAChD8F,EAAkBtE,QAAQ8E,gBAAgBrB,EAAgBW,GAAyB5F,KACnFsF,EAAa9D,QAAQ6E,UAAUpB,GAAgBjF,KAC/CuF,EAAa/D,QAAQ6E,UAAUpB,GAAgBjF,KAE/CwF,EAAahE,QAAQ6E,UAAUpB,GAAgBjF,KAC/CyF,EAAajE,QAAQ6E,UAAUpB,GAAgBjF,KAC/C0F,EAAalE,QAAQ6E,UAAUpB,GAAgBjF,KAC/C2F,EAAenE,QAAQ6E,UAAUpB,GAAgBjF,KAEjDgG,EAAkBxE,QAAQ6E,UAAUpB,GAAgBjF,KACpDgG,EAAkBxE,QAAQC,cAAczB,KACxCgG,EAAkBxE,QAAQ+E,cAAcvG,KAExCkG,EAAmB1E,QAAQ6E,UAAUpB,GAAgBjF,KACrDkG,EAAmB1E,QAAQC,cAAczB,KACzCkG,EAAmB1E,QAAQ+E,cAAcvG,KAEzCmG,EAAkB3E,QAAQ6E,UAAUpB,GAAgBjF,KACpDmG,EAAkB3E,QAAQC,cAAczB,KACxCmG,EAAkB3E,QAAQ+E,cAAcvG,MAG5CN,EAAiBC,EAAMC,GAAOQ,MAAK,SAAAC,GAC/B,IAAAqB,EAAAnE,YA0BI8C,EAAI,IAzBJmG,EAAY9E,EAAA,GACZ+E,EAAY/E,EAAA,GACZgF,EAAYhF,EAAA,GACZiF,EAAYjF,EAAA,GACZkF,EAAwBlF,EAAA,GACxBmF,EAAWnF,EAAA,GACXoF,EAAWpF,EAAA,GAEXqF,EAAWrF,EAAA,GACXsF,EAAWtF,EAAA,GACXuF,EAAWvF,EAAA,GACXwF,EAAaxF,EAAA,IAEbyF,EAAgBzF,EAAA,IAChBG,EAAiBH,EAAA,IACjB0F,EAAoB1F,EAAA,IAEpB2F,EAAkB3F,EAAA,IAClB4F,EAAmB5F,EAAA,IACnB6F,EAAsB7F,EAAA,IAEtB8F,EAAgB9F,EAAA,IAChB+F,EAAiB/F,EAAA,IACjBgG,EAAoBhG,EAAA,IAIxBV,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,SAClBG,QAAS4J,EAAY7D,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASjF,EAAa,CACxB9C,MAAO,OACP0C,iBAAkB,SAClBjC,OAAQoM,EAAwBjE,KAAAC,IAAI,GAAM,OAI9C5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAAS6J,EAAY9D,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAAS8J,EAAY/D,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAAS+J,EAAYhE,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASiK,EAAWlE,KAAAC,IAAI,GAAM,MAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASkK,EAAWnE,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASmK,EAAWpE,KAAAC,IAAI,GAAM,MAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASoK,EAAWrE,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASqK,EAAWtE,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASsK,EAAavE,KAAAC,IAAI,GAAM,OAGpC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASuK,EAAgBxE,KAAAC,IAAI,GAAI,OAGrC5B,EAAMc,SAASpF,EAAa,CACxB3C,MAAO,OACP0C,iBAAkB,6CAClBnC,GAAI,CACAqN,OAAQ9F,EAAkBG,SAAQW,KAAAC,IAAI,GAAI,IAAMuE,EAAiBC,EACjEQ,OAAQ/F,EAAkBE,SAAQY,KAAAC,IAAI,GAAI,IAAMuE,EAAiBC,EACjES,MAAOV,EAAiBC,EAAuB,QAIvDpG,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASyK,EAAkB1E,KAAAC,IAAI,GAAI,OAGvC5B,EAAMc,SAASpF,EAAa,CACxB3C,MAAO,OACP0C,iBAAkB,6CAClBnC,GAAI,CACAqN,OAAQL,EAAoBtF,SAAQW,KAAAC,IAAI,GAAI,IAAMyE,EAAmBE,EACrEK,OAAQN,EAAoBvF,SAAQY,KAAAC,IAAI,GAAI,IAAMyE,EAAmBE,EACrEM,MAAOR,EAAmBE,EAAyB,QAI3DvG,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAAS4K,EAAgB7E,KAAAC,IAAI,GAAI,OAGrC5B,EAAMc,SAASpF,EAAa,CACxB3C,MAAO,OACP0C,iBAAkB,6CAClBnC,GAAI,CACAqN,OAAQF,EAAkBzF,SAAQW,KAAAC,IAAI,GAAI,IAAM4E,EAAiBE,EACjEE,OAAQH,EAAkB1F,SAAQY,KAAAC,IAAI,GAAI,IAAM4E,EAAiBE,EACjEG,MAAOL,EAAiBE,EAAuB,QAMvD1G,EAAMc,SAAS9E,EAAa,QAChC,GACJ,CA3MIkF,CAAQvH,EAAOiB,EAAIzB,KAAM8K,GA6M7B,SAAiBtK,EAAOiB,EAAKqJ,GAEzB,IAAM9C,EAAW,IAAIjB,IAAKtF,GACpBkM,EAAgB,IAAI3F,EAAS9H,IAAI+G,SAAS+D,GAAa,8CACvD4C,EAAgB,IAAI5F,EAAS9H,IAAI+G,SAAS+D,GAAa,8CAEvD7C,EAAY,CACdH,EAAS9H,IAAI+L,WAAWnB,GACxB6C,EAActG,QAAQ6E,UAAUpB,GAAgBjF,KAChD+H,EAAcvG,QAAQ6E,UAAUpB,GAAgBjF,MAGpDN,EAAiByC,EAAUG,GAAWlC,MAAK,SAAAC,GACvC,IAAAkC,EAAAhF,YAII8C,EAAI,GAHJ2H,EAAYzF,EAAA,GACZ0F,EAAY1F,EAAA,GACZ2F,EAAY3F,EAAA,GAGhBvB,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,SAClBG,QAASoL,EAAYrF,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASqL,EAAYtF,KAAAC,IAAI,GAAM,MAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,OACP0C,iBAAkB,6CAClBG,QAASsL,EAAYvF,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAAS9E,EAAa,QAEhC,IACKsD,MAAMuE,QAAQC,IACvB,CArPIhC,CAAQnI,EAAOiB,EAAI1B,KAAM+K,GAuP7B,SAAgBtK,EAAOiB,EAAKqJ,GACxB,IAAMlC,EAAU,IAAI7B,IAAKtF,GACnBuM,EAAe,IAAIpF,EAAQ1I,IAAI+G,SAAS+D,GAAa,8CACrDiD,EAAe,IAAIrF,EAAQ1I,IAAI+G,SAAS+D,GAAa,8CACrDkD,EAAgB,IAAItF,EAAQ1I,IAAI+G,SAAS+D,GAAa,8CACtD2C,EAAgB,IAAI/E,EAAQ1I,IAAI+G,SAAS+D,GAAa,8CACtDmD,EAAgB,IAAIvF,EAAQ1I,IAAI+G,SAAS+D,GAAa,8CAEtDoD,EAAW,CACbxF,EAAQ1I,IAAI+L,WAAWnB,GACvBkD,EAAa3G,QAAQ6E,UAAUpB,GAAgBjF,KAC/CoI,EAAa5G,QAAQ6E,UAAUpB,GAAgBjF,KAC/CqI,EAAc7G,QAAQ6E,UAAUpB,GAAgBjF,KAChD8H,EAActG,QAAQ6E,UAAUpB,GAAgBjF,KAChDsI,EAAc9G,QAAQ6E,UAAUpB,GAAgBjF,MAGpDN,EAAiBqD,EAASwF,GAAUnI,MAAK,SAAAC,GACrC,IAAAkD,EAAAhG,YAOI8C,EAAI,GANJ4G,EAAW1D,EAAA,GACXiF,EAAWjF,EAAA,GACXkF,EAAWlF,EAAA,GACXmF,EAAYnF,EAAA,GACZ0E,EAAY1E,EAAA,GACZoF,EAAYpF,EAAA,GAGhBvC,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,SAClBG,QAASqK,EAAWtE,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS4L,EAAW7F,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS6L,EAAW9F,KAAAC,IAAI,GAAM,MAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS8L,EAAY/F,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAASqL,EAAYtF,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS+L,EAAYhG,KAAAC,IAAI,GAAM,OAGnC5B,EAAMc,SAAS9E,EAAa,OAEhC,GACJ,CAxTI+G,CAAOpJ,EAAOiB,EAAIxB,IAAK6K,GA0T3B,SAAgBtK,EAAOiB,EAAKqJ,GACxB,IAAMjB,EAAU,IAAI9C,IAAKtF,GACnBgN,EAAgB,IAAI5E,EAAQ3J,IAAI+G,SAAS+D,GAAa,8CACtDiD,EAAe,IAAIpE,EAAQ3J,IAAI+G,SAAS+D,GAAa,8CACrDgD,EAAe,IAAInE,EAAQ3J,IAAI+G,SAAS+D,GAAa,8CACrD2C,EAAgB,IAAI9D,EAAQ3J,IAAI+G,SAAS+D,GAAa,8CACtDmD,EAAgB,IAAItE,EAAQ3J,IAAI+G,SAAS+D,GAAa,8CAEtDb,EAAW,CACbN,EAAQ3J,IAAI+L,WAAWnB,GACvB2D,EAAcpH,QAAQ6E,UAAUpB,GAAgBjF,KAChDoI,EAAa5G,QAAQ6E,UAAUpB,GAAgBjF,KAC/CmI,EAAa3G,QAAQ6E,UAAUpB,GAAgBjF,KAC/C8H,EAActG,QAAQ6E,UAAUpB,GAAgBjF,KAChDsI,EAAc9G,QAAQ6E,UAAUpB,GAAgBjF,MAGpDN,EAAiBsE,EAASM,GAAUlE,MAAK,SAAAC,GACrC,IAAAkE,EAAAhH,YAOI8C,EAAI,GANJ2G,EAAWzC,EAAA,GACXsE,EAAYtE,EAAA,GACZkE,EAAWlE,EAAA,GACXiE,EAAWjE,EAAA,GACX0D,EAAY1D,EAAA,GACZoE,EAAYpE,EAAA,GAGhBvD,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,SAClBG,QAASoK,EAAWrE,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAASiM,EAAYlG,KAAAC,IAAI,GAAM,MAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS6L,EAAW9F,KAAAC,IAAI,GAAM,MAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS4L,EAAW7F,KAAAC,IAAI,GAAM,OAGlC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAASqL,EAAYtF,KAAAC,IAAI,GAAM,MAGnC5B,EAAMc,SAASnF,EAAe,CAC1B5C,MAAO,MACP0C,iBAAkB,6CAClBG,QAAS+L,EAAYhG,KAAAC,IAAI,GAAM,MAGnC5B,EAAMc,SAAS9E,EAAa,OAEhC,GACJ,CA3XI+H,CAAOpK,EAAOiB,EAAIvB,IAAK4K,GAC3B,C,wBChBM6D,GAAQC,aAAY,CACtBC,WAAY,CACRC,WAAW,2BAEfC,QAAS,CACLC,KAAM,OACNC,WAAY,CACRC,QAAS,QAEbC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,cAKZE,GAAiBC,cAAW,SAACZ,GAAK,MAAM,CAC1Ca,YAAa,CACTC,aAAc,MACdC,WAAY,GACZC,SAAU,WACVC,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,QAAS,eACTC,eAAgB,QAChB,SAAU,CACNC,gBAAgB,0DAEpB,SAAU,CACNA,gBAAgB,0DAEpB,QAAS,CACLA,gBAAgB,yDAEpB,QAAS,CACLA,gBAAgB,0DAG3B,IAIctB,M,4EC/CA,SAASuB,GAAUC,GAE9B,IAAOC,EAAuED,EAAvEC,MAAOC,EAAgEF,EAAhEE,IAAKC,EAA2DH,EAA3DG,SAAUC,EAAiDJ,EAAjDI,MAAOC,EAA0CL,EAA1CK,SAAUC,EAAgCN,EAAhCM,eAAgBC,EAAgBP,EAAhBO,aAE9D,OACIC,eAACC,KAAW,CACRC,MAAO,CACHC,gBAAiB,aACjBC,OAAQ,OACRC,YAAa,QACbvB,aAAc,GAElBwB,WAAS,EAAAC,SACTP,eAACQ,KAAS,CACNC,QAAQ,WACRvR,KAAK,OACLwR,UAAU,UACVC,aAAa,MACbC,YAAY,MACZC,WAAW,MACXC,QAAQ,sBACRC,YAAY,IACZrB,IAAKA,EACLC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVJ,MAAOA,EACPuB,WAAY,CACRC,WAAY,CACRf,MAAO,CACHgB,UAAW,UAGnBpB,eAAgBA,EAChBC,aAAcA,MAKlC,C,cCzCO,SAASoB,GAAiBC,GAE7B,GAAGC,MAAMD,GAAQ,MAAO,MAExB,GAAGA,EAAS,EAACvJ,KAAAC,IAAE,GAAI,IACf,MAAO,KAIX,IAAIwJ,EAAYC,WAAWH,GAAQI,QAAQ,IAAIC,MAAM,UAAU,GAAGC,OAAS,EAGvEJ,EAAY,KAAIA,EAAY,IAE5BF,EAAS,IAAGE,EAAY,GAG5B,IAAIK,EAAY,EAqBhB,OAnBGP,EAAS,IAAGO,EAAY,GAGxBL,EAAYK,IAAWL,EAAYK,GAEnCP,EAAS,EAACvJ,KAAAC,IAAE,GAAI,MACf6J,EAAY,EACZL,EAAY,GAGQ,IAAIM,KAAKC,aAAa,QAAS,CACnDC,sBAAuBH,EACvBI,sBAAuBT,EACvBU,SAAU,MACVC,aAAc,WACdC,gBAAiB,SACjBhC,MAAO,aAGYiC,OAAOf,EAClC,CAEO,SAASgB,GAAoBhB,GAEhC,GAAGC,MAAMD,GAAQ,MAAO,KAExB,GAAGA,EAAS,EAACvJ,KAAAC,IAAE,GAAI,IACf,OAAO,EAGX,IAAIuK,EAAc,EAuBlB,OArBIjB,EAAS,MAAMiB,EAAc,GAE7BjB,EAAS,IAAGiB,EAAc,GAC1BjB,EAAS,KAAIiB,EAAc,GAC3BjB,EAAS,MAAKiB,EAAc,GAC5BjB,EAAS,OAAMiB,EAAc,GAC7BjB,EAAS,OAAOiB,EAAc,GAC9BjB,EAAS,OAAQiB,EAAc,GAC/BjB,EAAS,OAASiB,EAAc,IAChCjB,EAAS,OAAUiB,EAAc,IACjCjB,EAAS,OAAWiB,EAAc,IAClCjB,EAAS,OAAYiB,EAAc,IACnCjB,EAAS,QAAaiB,EAAc,IACpCjB,EAAS,QAAciB,EAAc,IACrCjB,EAAS,QAAeiB,EAAc,IAElB,IAAIT,KAAKC,aAAa,QAAS,CACnDC,sBAAuB,EACvBC,sBAAuBM,IAGJF,OAAOf,EAClC,C,4CCzEe,OAA0B,oCCG1B,SAASkB,GAAe9C,GAEnC,OAAOQ,eAACuC,KAAM,CACVC,KAAMhD,EAAMgD,KACZjC,SAEAkC,gBAACC,KAAa,CAAAnC,SAAA,CACVkC,gBAAA,OAAKvC,MAAO,CAACyC,OAAQ,SAAUzB,UAAW,UAAUX,SAAA,CAChDP,eAAA,OACI4C,IAAKC,GACLC,IAAI,aACJ3D,MAAO,IACPe,MAAO,CAAClB,SAAU,QAAS2D,OAAQ,GAAI7D,aAAc,SAEzDkB,eAAC+C,KAAgB,CAACC,MAAM,YAAYC,KAAM,IAAKC,UAAW,OAE9DlD,eAACmD,KAAU,CAACjC,UAAU,SAAShB,MAAO,CAACkD,UAAW,IAAI7C,SAAEf,EAAMC,YAG1E,CCVA,IAAM4D,GAAc,6CACdC,GAAgB,6CAEP,SAASC,KAAQ,IAADC,EAAAC,EAE3BC,EAAsBC,aAAY,SAAAtS,GAAK,OAAIA,EAAMmD,OAAO,IAAjD1F,EAAM4U,EAAN5U,OAAQgC,EAAG4S,EAAH5S,IAETkN,EAAQ4F,eAEdC,EAAgCC,mBAAS,GAAEC,EAAAtR,YAAAoR,EAAA,GAApCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAkCJ,mBAAS,GAAEK,EAAA1R,YAAAyR,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8BR,oBAAS,GAAMS,EAAA9R,YAAA6R,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,EAAgCZ,mBAAS,CAAC,EAAG,IAAGa,EAAAlS,YAAAiS,EAAA,GAAzCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5BG,EAAsChB,wBAAS9U,GAAU+V,EAAAtS,YAAAqS,EAAA,GAAlDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA4BpB,wBAAS9U,GAAUmW,EAAA1S,YAAAyS,EAAA,GAAxCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAA4BxB,wBAAS9U,GAAUuW,EAAA9S,YAAA6S,EAAA,GAAxCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAiBxBG,qBAfmB,WAEf,GAAK1B,GAAaY,EAAS,IAAOA,EAAS,GAA3C,CAKA,IAAM/P,EAAO,IAAIuB,IAAKtF,EAAIzB,MACT,IAAIwF,EAAKtF,IAAI+G,SAASqP,GAAYrC,IAE1C5M,QAAQkP,aAAa/Q,EAAKgR,MAAMC,MAAM9B,GAAWY,EAAS,GAAIA,EAAS,IAAI1P,MAAK,SAACO,EAAKF,GAC3F8O,EAAajC,GAAoB7M,EAAIsC,KAAAC,IAAI,GAAM,IAAM,MACzD,GAPA,MAFIuM,EAAa,EAUrB,GAEsB,CAACL,EAAUY,EAAU9T,EAAIzB,OAE/C,IAAMsH,EAAc,WAEC,IADJ,IAAIP,IAAKtF,EAAIzB,MACAE,IAAI+G,UAASyP,EAAS1C,IAEvC3M,QAAQC,cAAczB,MAAK,SAACO,EAAKF,GACtCsP,EAAY,CAACtP,EAAK2B,SAAU3B,EAAK0B,UACrC,GACJ,EAEAyO,qBAAU,WACN/O,IACA,IAAMqP,EAAWC,YAAYtP,EAAa,KAC1C,OAAO,kBAAMuP,cAAcF,EAAU,CACzC,GAAG,IAEH,IAAMG,EAAI,eAAA5T,EAAA6T,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAA1R,EAAA2R,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMwD,OALjE5B,OAAejW,GACfqW,OAAUrW,GACVyW,OAAUzW,GAEJ6F,EAAO,IAAIuB,IAAK0Q,OAAOC,UACvBP,EAAW,IAAI3R,EAAKtF,IAAI+G,SAASqP,GAAYrC,IAAcqD,EAAAE,KAAA,EAC1ChS,EAAKtF,IAAIyX,cAAc,KAAD,EAAvCP,EAAQE,EAAAM,KAEdT,EAAS9P,QAAQwQ,sBACbrS,EAAKgR,MAAMC,MAAO1B,EAAW+C,YAC7B,CACI,6CACA,8CAEJrY,EAAOC,WACJ,IAAIqY,MAAQC,UAAY,KAAS,KAAM7F,QAAQ,IAEjD8F,KACG,CACIC,KAAMzY,EAAOC,QACb6Q,MAAO/K,EAAKgR,MAAMC,MAAM9B,GACxBwD,IAAK,IACLf,aAGPgB,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,GACXY,EAAUqC,EACd,IACCC,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZ3N,GAAgBpL,EAAOC,SACvBkW,EAAepQ,EAAKgR,MAAMiC,kBAAkBD,EAAQE,OAAO,GAAGC,IAAIpS,MAAKiC,KAAAC,IAAI,GAAM,KACjF2N,EAAUoC,EAAQI,SAAWJ,EAAQK,kBAAiBrQ,KAAAC,IAAI,GAAM,MAChE2M,GAAW,EACf,IAAG,wBAAAkC,EAAAwB,OAAA,GAAA5B,EAAA,KACV,kBAvCS,OAAAhU,EAAA6V,MAAA,KAAAC,UAAA,KAyCV,OACI5F,gBAAC6F,IAAS,CAACC,SAAS,KAAIhI,SAAA,CACpBP,eAACwI,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGxI,MAAO,CAACkD,WAAY,EAAGuF,cAAe,IAAIpI,SAClEkC,gBAAC+F,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SAAA,CACdP,eAAC8I,IAAK,CAAC5I,MAAO,CAAC6I,QAAS,IAAIxI,SACxBkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEnI,SAAA,CACvBkC,gBAAC+F,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SAAA,CACdP,eAACT,GAAS,CACNK,MAAOoE,GAAY,GACnBnE,SAAU,SAACmJ,GACP/E,EAAY+E,EAAGC,OAAOrJ,MAC1B,EACAE,eACIE,eAACkJ,KAAc,CAAClK,SAAS,QAAOuB,SAC5BP,eAACmJ,IAAM,CACH1I,QAAQ,YACRuC,MAAM,UACN9C,MAAO,CACHC,gBAAiBnC,EAAMI,QAAQE,WAAW8K,MAC1C9J,gBAAiB,wEACjB0D,MAAO,QAEXqG,UAAWrJ,eAACsJ,IAAM,CAAC1G,IAAI,kDACJ1C,MAAO,CAACf,MAAO,GAAID,OAAQ,MAAOqB,SACxD,aAKbkC,gBAACU,KAAU,CAAC1C,QAAQ,UACRP,MAAO,CAACqJ,MAAO,SAAShJ,SAAA,CAAC,YAAU6B,GAAoBtT,EAAOW,SAASJ,KAAKma,cAE5F/G,gBAAC+F,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SAAA,CACdP,eAACT,GAAS,CACNI,UAAQ,EACRC,MAAOwE,GAAa,GACpBvE,SAAU,SAACmJ,GACP3E,EAAa2E,EAAGC,OAAOrJ,MAC3B,EACAE,eACIE,eAACkJ,KAAc,CAAClK,SAAS,QAAOuB,SAC5BP,eAACmJ,IAAM,CACH1I,QAAQ,YACRuC,MAAM,UACN9C,MAAO,CACHC,gBAAiBnC,EAAMI,QAAQE,WAAW8K,MAC1C9J,gBAAiB,wEACjB0D,MAAO,QAEXqG,UAAWrJ,eAACsJ,IAAM,CACd1G,IAAI,6FACJ1C,MAAO,CAACf,MAAO,GAAID,OAAQ,MAAOqB,SACzC,aAKbkC,gBAACU,KAAU,CAAC1C,QAAQ,UACRP,MAAO,CAACqJ,MAAO,SAAShJ,SAAA,CAAC,YAAU6B,GAAoBtT,EAAOW,SAASJ,KAAK,qDAE5F2Q,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACmJ,IAAM,CAAC7I,WAAS,EAACG,QAAQ,YAAYgJ,QAAStD,EAAK5F,SAAC,qBAK7CvR,IAAhBgW,GAA6BvC,gBAAAiH,YAAA,CAAAnJ,SAAA,CACzBP,eAAC2J,KAAO,CAACzJ,MAAO,CAACkD,UAAW,GAAIwG,aAAc,IAAIrJ,SAAC,YACnDP,eAAC8I,IAAK,CACF5I,MAAO,CACHC,gBAAiB,QACjB6C,MAAO,OACP+F,QAAS,GACT5K,WAAY,aACdoC,SACFkC,gBAAC+F,IAAI,CAACC,WAAS,EAAAlI,SAAA,CACXP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,aAAaoC,SAAC,gBAElDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,YAAa+C,UAAW,SAASX,SAAA,GAAAvM,OACzDoO,GAAoB4C,GAAY,aAI5ChF,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACkD,UAAW,MAGtCpD,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,aAAaoC,SAAC,YAElDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,YAAa+C,UAAW,SAASX,SAAA,GAAAvM,OACzDoO,GAAoBoD,GAAO,aAKvCxF,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,IACf7I,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,YAAa+C,UAAW,SAASX,SAAA,GAAAvM,OACzDmN,GAAiBqE,GAA2B,QAArBhC,EAAG1U,EAAOa,OAAON,YAAI,IAAAmU,GAAQ,QAARC,EAAlBD,EAAoBgG,cAAM,IAAA/F,OAAR,EAAlBA,EAA4B/Q,QAAM,YAKxEsN,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACkD,UAAW,MAEtCpD,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,aAAaoC,SAAC,aAElDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmD,KAAU,CAACjD,MAAO,CAAC/B,WAAY,YAAa+C,UAAW,SAASX,SAE7DP,eAAC6J,IAAI,CACD3J,MAAO,CAAC8C,MAAO,OAAQ8G,oBAAqB,QAC5CC,KAAI,+BAAA/V,OAAiCoR,GACrC6D,OAAO,SAAQ1I,SAAA,OAAAvM,OAASoR,EAAO4E,QAAQ,wBAU3EhK,eAACsC,GAAc,CAACE,KAAMgC,EAAS/E,MAAM,0BAGjD,C,yLCxOe,SAASwK,GAAMzK,GAC1B,OAAQQ,eAAC8I,IAAK,CAAC5I,MAAO,CAClB8C,MAAO,QACP+F,QAAS,GACTpG,OAAQ,EACR7D,aAAc,EACdqB,gBAAiB,OACjBC,OAAQ,kBACVG,SAAEf,EAAMe,UACd,C,YCwBe,SAAS2J,KAEpB,IAAArG,EAAoCC,oBAAS,GAAMC,EAAAtR,YAAAoR,EAAA,GAA5CsG,EAAUpG,EAAA,GAAEqG,EAAarG,EAAA,GAChCG,EAAgCJ,mBAAS,QAAOK,EAAA1R,YAAAyR,EAAA,GAAzCmG,EAAQlG,EAAA,GAAEmG,EAAWnG,EAAA,GAE5B,OACI1B,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGxI,MAAO,CAACyI,cAAe,IAAIpI,SAAA,CACnDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACgB,UAAW,SAASX,SAC3CkC,gBAAC8H,KAAiB,CACd3K,MAAOuK,EACPK,WAAS,EACT3K,SAAU,kBAAMuK,GAAeD,EAAW,EAC1CjK,MAAO,CAACC,gBAAiB,QAAQI,SAAA,CAEjCP,eAACyK,KAAY,CAAC7K,OAAO,EAAMW,SACvBP,eAAC0K,KAAmB,MAExB1K,eAACyK,KAAY,CAAC7K,OAAO,EAAKW,SACtBP,eAAC2K,KAAe,WAK5B3K,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACgB,UAAW,SAASX,SAC3CkC,gBAACmI,KAAI,CACDnK,QAAQ,YACRb,MAAOyK,EACPxK,SAAU,SAACmJ,EAAI6B,GACXP,EAAYO,EAChB,EAAEtK,SAAA,CAEFP,eAAC8K,KAAG,CAACC,GAAG,OAAOnL,MAAM,OAAOH,MAAM,SAClCO,eAAC8K,KAAG,CAACC,GAAG,MAAMnL,MAAM,MAAMH,MAAM,aAIvB,SAAb4K,GAAuB5H,gBAAAiH,YAAA,CAAAnJ,SAAA,CAEnBP,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKC,GACLf,WAAYA,EACZgB,QAAQ,SAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKG,GACLjB,WAAYA,EACZgB,QAAQ,SAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKG,GACLjB,WAAYA,EACZgB,QAAQ,SAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKI,GACLlB,WAAYA,EACZgB,QAAQ,SAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKK,GACLnB,WAAYA,EACZgB,QAAQ,YAOH,QAAbd,GAAsB5H,gBAAAiH,YAAA,CAAAnJ,SAAA,CAElBP,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKK,GACLnB,WAAYA,EACZgB,QAAQ,QAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKK,GACLnB,WAAYA,EACZgB,QAAQ,QAGZnL,eAACgL,GAAc,CACXrZ,iBAAiB,6CACjBsZ,IAAKK,GACLnB,WAAYA,EACZgB,QAAQ,aAQhC,CAEA,SAASH,GAAexL,GAAQ,IAAD+L,EAAAC,EAE3B9H,EAAsBC,aAAY,SAAAtS,GAAK,OAAIA,EAAMmD,OAAO,IAAjD1F,EAAM4U,EAAN5U,OAAQgC,EAAG4S,EAAH5S,IAERa,EAA8C6N,EAA9C7N,iBAAkBsZ,EAA4BzL,EAA5ByL,IAAKE,EAAuB3L,EAAvB2L,QAAShB,EAAc3K,EAAd2K,WAEvC7F,EAA4BR,mBAAS,CAAC2H,SAAU,IAAGlH,EAAA9R,YAAA6R,EAAA,GAA5CoH,EAAMnH,EAAA,GAAEoH,EAASpH,EAAA,GAElBqH,EAAUjN,KAEVkN,EAAoB,WAEtB,IAAMhX,EAAO,IAAIuB,IAAKtF,EAAIqa,IAEpBW,EAAkB,IAAIjX,EAAKtF,IAAI+G,SAAS2U,EAAKtZ,GAE7CmD,EAAQ,CACVgX,EAAgBpV,QAAQqV,gBAAgB7W,KACxC4W,EAAgBpV,QAAQsV,YAAY9W,KACpC4W,EAAgBpV,QAAQuV,aAAa/W,KACrCL,EAAKtF,IAAI+L,WAAW3J,IAGxBiD,EAAiBC,EAAMC,GAAOQ,MAAK,SAAAC,GAC/B,IAOI2W,EAPJtV,EAAAnE,YAKI8C,EAAI,GAJJ4W,EAAUvV,EAAA,GACV7F,EAAM6F,EAAA,GACNwV,EAAOxV,EAAA,GACPyV,EAAGzV,EAAA,GAIH0V,EAAiB,IAAIzX,EAAKtF,IAAI+G,SAASiW,GAAQxb,EAAOyb,QAAQzB,IAKlE,OAAQ0B,SAASN,EAAWO,cACxB,KAAK,EAEDR,EAAKG,EAAOA,EAAMF,EAAWQ,UAC7B,MACJ,KAAK,EACL,KAAK,EAEDT,EAAKC,EAAWS,IAChB,MACJ,KAAK,EACDV,OAAKld,EAQb4F,EAAiBC,EAAM,CAAuB,+CAAtB9D,EAAOyb,QAAQzB,GAAsDlW,EAAKtF,IAAI+L,WAAW3J,GAAoB2a,EAAe5V,QAAQ6E,UAAU5J,GAAkBuD,OAAOI,MAAK,SAAAC,QAKrLvG,IAAPkd,IAAkBA,EAAM3W,EAAQA,EAAO4W,EAAWQ,WAEtDhB,EAAU,CACNkB,WAAYV,EAAWW,YAAWjV,KAAAC,IAAI,GAAM/G,EAAOgc,MAAMC,UACzDC,SAAUd,EAAWQ,UAAY,EACjCO,SAAUf,EAAWgB,UAAY,EACjCC,eAAgBjB,EAAWkB,gBAAkB,EAC7C5B,SAAiC,IAAvBU,EAAWmB,UACrBC,iBAAkBpB,EAAWqB,yBAA2B,EACxDC,UAAWtB,EAAWuB,WAAa,EACnCC,cAAexB,EAAWyB,eAAiB,EAC3CC,WAAY1B,EAAWO,YAAc,EACrCoB,YAAa3B,EAAW4B,aAAe,EACvChd,OAAQ,CAACgc,MAAOhc,EAAOgc,MAAOP,QAASzb,EAAOyb,SAC9CA,QAASN,EAAErU,KAAAC,IAAI,GAAM/G,EAAOyb,QAAQQ,UACpCZ,WAER,GACJ,GACJ,EAEA1G,qBAAU,WACNmG,IACA,IAAM7F,EAAWC,YAAY4F,EAAmB,KAChD,OAAO,kBAAM3F,cAAcF,EAAU,CACzC,GAAG,IAEH,IA6GmBgI,EAAOpO,EA7G1B8E,EAAsCZ,wBAAS9U,GAAU2V,EAAAlS,YAAAiS,EAAA,GAAlDuJ,EAAWtJ,EAAA,GAAEuJ,EAAcvJ,EAAA,GASlC,OARAe,qBAAU,WACNwI,EAAeC,GAAQC,GAAe1C,EAAOD,YAC7C,IAAM4C,EAAYpI,aAAY,WAC1BiI,EAAeC,GAAQC,GAAe1C,EAAOD,WACjD,GAAG,KACH,OAAO,kBAAMvF,cAAcmI,EAAW,CAC1C,GAAG,CAAC3C,IAEkC,IAAlCtZ,OAAOC,QAAQqZ,GAAQhK,OAChB1B,eAACsO,GAAoB,IAGzBtO,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACyC,OAAQ,IAAIpC,SAC1CP,eAACiK,GAAK,CAAA1J,SACFkC,gBAAC8L,KAAI,CAACC,gBAAc,EAAAjO,SAAA,CAChBP,eAACyO,IAAQ,CAACC,gBAAc,EAAAnO,SACpBkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEnI,SAAA,CACvBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAG3I,MAAO,CAACgB,UAAW,UAAUX,SAC3CkC,gBAACqG,IAAK,CAAC5I,MAAO,CAAC6I,QAAS,IAAIxI,SAAA,CACxBkC,gBAACkM,KAAc,CAAApO,SAAA,CACXP,eAACsJ,IAAM,CAACpJ,MAAO,CAACyC,OAAQ,UAChBC,IAAG,qCAAA5O,OAAuCmX,EAAO,KAAAnX,OAA+B,+CAA3B0X,EAAO3a,OAAOgc,MAAMhC,GAAsD,GAAKW,EAAO3a,OAAOgc,MAAMhC,GAAK,IAAG,cAC5I,+CAA3BW,EAAO3a,OAAOgc,MAAMhC,IACjB/K,eAAA,QAAM4O,UAAWC,aAAKjD,EAAQ/M,YAAasM,GACrCjL,MAAO,CAACnB,WAAY,GAAIE,IAAK,SAE3Ce,eAAC8O,IAAY,CACTtQ,QAAS2L,EAAU,IAAAnW,OAAOmN,GAAiBuK,EAAOmB,aAAiJ,QAAnItB,EAAAzc,EAAOa,OAAOwb,GAAoC,+CAA3BO,EAAO3a,OAAOgc,MAAMhC,GAAsD,SAAWW,EAAO3a,OAAOgc,MAAMhC,WAAG,IAAAQ,OAAA,EAAnIA,EAAqI7Y,QAAS,KAAG,GAAAsB,OAAQoO,GAAoBsJ,EAAOmB,YAAW,KAAA7Y,OAAI0X,EAAO3a,OAAOgc,MAAMgC,QACvRC,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,MAEb/B,UAAS,sBAIrBsB,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAG3I,MAAO,CAACgB,UAAW,UAAUX,SAC3CkC,gBAACqG,IAAK,CAAC5I,MAAO,CAAC6I,QAAS,IAAIxI,SAAA,CACxBkC,gBAACkM,KAAc,CAAApO,SAAA,CACXP,eAACsJ,IAAM,CAACpJ,MAAO,CAACyC,OAAQ,UAChBC,IAAG,qCAAA5O,OAAuCmX,EAAO,KAAAnX,OAAiC,+CAA7B0X,EAAO3a,OAAOyb,QAAQzB,GAAsD,GAAKW,EAAO3a,OAAOyb,QAAQzB,GAAK,IAAG,cAChJ,+CAA3BW,EAAO3a,OAAOgc,MAAMhC,IACjB/K,eAAA,QAAM4O,UAAWC,aAAKjD,EAAQ/M,YAAasM,GACrCjL,MAAO,CAACnB,WAAY,GAAIE,IAAK,SAE3Ce,eAAC8O,IAAY,CACTtQ,QAAS2L,EAAU,IAAAnW,OAAOmN,GAAiBuK,EAAOc,UAAkJ,QAAvIhB,EAAA1c,EAAOa,OAAOwb,GAAsC,+CAA7BO,EAAO3a,OAAOyb,QAAQzB,GAAsD,SAAWW,EAAO3a,OAAOyb,QAAQzB,WAAG,IAAAS,OAAA,EAAvIA,EAAyI9Y,QAAS,KAAG,GAAAsB,OAAQoO,GAAoBsJ,EAAOc,SAAQ,KAAAxY,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QACvRC,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,MAEb/B,UAAS,GAAA1K,OAA2B,IAAtB0X,EAAOmC,YAA0C,IAAtBnC,EAAOmC,WAAmB,GAAK,UAAS,wBAQrG7N,eAACyO,IAAQ,CAACC,gBAAc,EAAAnO,SAEpBP,eAACkP,KAAU,CAACC,GAAE,YAAAnb,OAAcmX,EAAO,KAAAnX,OAAIrC,GAC3BuO,MAAO,CAACf,MAAO,OAAQiQ,eAAgB,QAAQ7O,SACvDP,eAACmJ,IAAM,CACH7I,WAAS,EACTG,QAAQ,YACRd,SAAiC,IAAvB+L,EAAOoC,aAAwC,+CAAnBhf,EAAOC,QAC7CsgB,SAyCLrB,EAzC4BtC,EAAOU,QAyC5BxM,EAzCqC9Q,EAAOC,QA0C/Dif,EAAMsB,QAAO,SAACC,GAAC,OAAMA,IAAM3P,CAAK,IAAG8B,OA1CuC1B,eAACwP,KAAQ,SAAKxgB,GAAUuR,SAC5D,IAAvBmL,EAAOoC,YAAoB,gBAAmBM,GAAe1C,EAAOD,UAAY,EAAC,cAAAzX,OAAkBia,GAAW,iCAQxI,CAEA,SAASK,KACL,OACItO,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAI3I,MAAO,CAACyC,OAAQ,IAAIpC,SACnCP,eAACiK,GAAK,CAAC/J,MAAO,CAAC6I,QAAS,IAAIxI,SACxBkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEnI,SAAA,CACvBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACyP,KAAQ,CAAChP,QAAQ,UAAUvB,OAAQ,IAAKC,MAAM,WAEnDa,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACyP,KAAQ,CAAChP,QAAQ,UAAUvB,OAAQ,IAAKC,MAAM,WAEnDa,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACyP,KAAQ,CAAChP,QAAQ,UAAUvB,OAAQ,GAAIC,MAAM,iBAKtE,CAEA,SAASiP,GAAesB,GACpB,OAAOA,EAAI,IAAItI,IACnB,CAEA,SAAS+G,GAAQwB,GACb,IACIC,EAAKD,EAAK,KAAS,IAAM,EACzBE,EAAKF,EAAK,IAAO,IAAM,EAC3B,MAAM,GAAN3b,OAHQ2b,EAAK,KAAQ,EAGV,KAAA3b,QAAK,GAAK4b,GAAGE,SAAS,EAAG,KAAI,KAAA9b,QAAK,GAAK6b,GAAGC,SAAS,EAAG,KACrE,C,uDCxUahK,GAAQ,SAAClG,GAA0B,IAAnBoN,EAAQ3E,UAAA3G,OAAA,QAAA1S,IAAAqZ,UAAA,GAAAA,UAAA,GAAG,GACpC,OAAKzI,EAGE,IAAImQ,aAAUnQ,GAAOoQ,aAAYnY,KAAAC,IAAC,GAAMkV,IAAUxL,UAF9C,CAGf,ECae,SAASyO,KAEpB,IAAAC,EAAkCC,eAA7Bxe,EAAgBue,EAAhBve,iBAAkBwZ,EAAO+E,EAAP/E,QAEvBzH,EAAsBC,aAAY,SAAAtS,GAAK,OAAIA,EAAMmD,OAAO,IAAjD1F,EAAM4U,EAAN5U,OAAQgC,EAAG4S,EAAH5S,IAEf+S,EAA8BC,oBAAS,GAAMC,EAAAtR,YAAAoR,EAAA,GAAtCW,EAAOT,EAAA,GAAEU,EAAUV,EAAA,GAE1BG,EAA4BJ,mBAAS,CAAC,GAAEK,EAAA1R,YAAAyR,EAAA,GAAjCwH,EAAMvH,EAAA,GAAEwH,EAASxH,EAAA,GAExBG,EAAkCR,mBAAS,GAAES,EAAA9R,YAAA6R,EAAA,GAAtC8L,EAAS7L,EAAA,GAAE8L,EAAY9L,EAAA,GAC9BG,EAAsCZ,mBAAS,GAAEa,EAAAlS,YAAAiS,EAAA,GAA1C4L,EAAW3L,EAAA,GAAE4L,EAAc5L,EAAA,GAElCG,EAAoChB,mBAAS,GAAEiB,EAAAtS,YAAAqS,EAAA,GAAxC0L,EAAUzL,EAAA,GAAE0L,EAAa1L,EAAA,GAGhCG,EAAkCpB,wBAAS9U,GAAUmW,EAAA1S,YAAAyS,EAAA,GAA9CwL,EAASvL,EAAA,GAAEwL,EAAYxL,EAAA,GAC9BG,EAAsCxB,wBAAS9U,GAAUuW,EAAA9S,YAAA6S,EAAA,GAAlDsL,EAAWrL,EAAA,GAAEsL,EAActL,EAAA,GAClCuL,EAAsChN,wBAAS9U,GAAU+hB,EAAAte,YAAAqe,EAAA,GAAlDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAA4DpN,wBAAS9U,GAAUmiB,EAAA1e,YAAAye,EAAA,GAAxEE,EAAsBD,EAAA,GAAEE,EAAyBF,EAAA,GACxDG,GAAoCxN,wBAAS9U,GAAUuiB,GAAA9e,YAAA6e,GAAA,GAAhDE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,GAAgD5N,wBAAS9U,GAAU2iB,GAAAlf,YAAAif,GAAA,GAA5DE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,GAA4ChO,wBAAS9U,GAAU+iB,GAAAtf,YAAAqf,GAAA,GAAxDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,GAAsCpO,mBAAS,GAAEqO,GAAA1f,YAAAyf,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAE5BpG,GAAgB,SAACpa,EAAkB2gB,GAErC,GAAKxjB,EAAOC,QAAZ,CAEA,IAAM8F,EAAO,IAAIuB,IAAKtF,EAAIqa,IAEpBW,EAAkB,IAAIjX,EAAKtF,IAAI+G,SAAS4U,GAAmBvZ,GAE3DmD,EAAQ,CACVgX,EAAgBpV,QAAQqV,gBAAgB7W,KACxC4W,EAAgBpV,QAAQuV,aAAa/W,KACrC4W,EAAgBpV,QAAQ6b,kBAAkBzjB,EAAOC,SAASmG,KAC1D4W,EAAgBpV,QAAQsV,YAAY9W,MAGxCN,EAAiBC,EAAMC,GAAOQ,MAAK,SAAAC,GAC/B,IAAAqB,EAAAnE,YAKI8C,EAAI,GAJJ4W,EAAUvV,EAAA,GACVwV,EAAOxV,EAAA,GACP4b,EAAW5b,EAAA,GACX7F,EAAM6F,EAAA,GAGJ6b,EAAmB,IAAI5d,EAAKtF,IAAI+G,SAASiW,GAAQxb,EAAOyb,QAAQzB,IAChE2H,EAAiB,IAAI7d,EAAKtF,IAAI+G,SAASiW,GAAQxb,EAAOgc,MAAMhC,IAE5D4H,EAAS,CACW,+CAAtB5hB,EAAOyb,QAAQzB,GAAsDlW,EAAKtF,IAAI+L,WAAW3J,GAAoB8gB,EAAiB/b,QAAQ6E,UAAU5J,GAAkBuD,KAClK4W,EAAgBpV,QAAQkc,yBAAyBzG,EAAWgB,UAAY,EAAI,EAAIhB,EAAWgB,UAAY,EAAI,GAAGjY,KAC1F,+CAApBnE,EAAOgc,MAAMhC,GAAuD,IAAI5V,SAAQ,SAAC0d,GAC7EA,GACJ,IAAMH,EAAehc,QAAQ0Z,UAAUthB,EAAOC,QAAS4C,GAAkBuD,KACrD,+CAApBnE,EAAOgc,MAAMhC,GAAuD,IAAI5V,SAAQ,SAAC0d,GAC7EA,GACJ,IAAMH,EAAehc,QAAQ+E,cAAcvG,MAG/CN,EAAiBC,EAAM8d,GAAQrd,MAAK,SAAAC,GAChC,IAOiCud,EAPjCrb,EAAAhF,YAKI8C,EAAI,GAJJiX,EAAO/U,EAAA,GACPsb,EAAOtb,EAAA,GACPub,EAAUvb,EAAA,GACV6Y,EAAW7Y,EAAA,GAGXwb,OAAkBjkB,EACS,IAA3Bmd,EAAWO,aAAgD,IAA3BP,EAAWO,aAC3CoG,EAAsBtG,EACtByG,EAAkBzG,EAAUL,EAAWS,IACvCJ,EAAUL,EAAWS,KAErBJ,GAAsBA,EAAUL,EAAWQ,UAG/C0D,EAAa2C,EAAUnb,KAAAC,IAAG,GAAM/G,EAAOgc,MAAMC,WAC7CuD,EAAeD,QAEGthB,IAAd0hB,GAAyBC,EAAaxE,EAAWQ,gBACjC3d,IAAhB4hB,GAA2BC,EAAerE,QAC1Bxd,IAAhBgiB,GAA2BC,EAAe9E,EAAWkB,sBAC1Bre,IAA3BoiB,GAAsCC,EAA0BlF,EAAWqB,+BAC5Dxe,IAAfwiB,IAA0BC,GAActF,EAAW+G,kBAC9BlkB,IAArB4iB,IAAgCC,GAAoB1F,EAAWW,YAAWjV,KAAAC,IAAI,GAAM/G,EAAOgc,MAAMC,gBAC9Ehe,IAAnBgjB,IAA8BC,GAAkB9F,EAAWW,aAE/DwF,EAAS,CACLzF,WAAYV,EAAWW,YAAWjV,KAAAC,IAAI,GAAM/G,EAAOgc,MAAMC,UACzDC,SAAUd,EAAWQ,UACrBO,SAAUf,EAAWgB,UACrBC,eAAgBjB,EAAWkB,gBAAkB,EAC7C5B,SAAiC,IAAvBU,EAAWmB,UACrBC,iBAAkBpB,EAAWqB,yBAC7BC,UAAWtB,EAAWuB,WACtBC,cAAexB,EAAWyB,eAAc/V,KAAAC,IAAI,GAAM/G,EAAOyb,QAAQQ,UACjEa,WAAY1B,EAAWO,YAAc,EACrCoB,YAAa3B,EAAW4B,aAAe,EACvCvB,QAASA,EAAO3U,KAAAC,IAAI,GAAM/G,EAAOyb,QAAQQ,UACzCZ,UACA+G,eAAgBJ,EAAQK,OACxBC,gBAAiBN,EAAQvG,QACzBgG,cACAzhB,SACAkiB,kBACAH,oBAAqBA,EAAmBjb,KAAAC,IAAI,GAAM/G,EAAOyb,QAAQQ,WAEzE,GACJ,IACKxX,MAAMuE,QAAQC,IArFQ,CAsF/B,EAEA0L,qBAAU,WACNqG,GAAcpa,EAAkBga,GAChC,IAAM3F,EAAWC,aAAY,kBAAM8F,GAAcpa,EAAkBga,EAAU,GAAE,KAC/E,OAAO,kBAAMzF,cAAcF,EAAU,CACzC,GAAG,CAAClV,EAAIqa,GAAUrc,EAAOC,UAEzB,IAAAukB,GAAsCxP,mBAAS,GAAEyP,GAAA9gB,YAAA6gB,GAAA,GAA1CrF,GAAWsF,GAAA,GAAErF,GAAcqF,GAAA,GAClC7N,qBAAU,WACNwI,GAAeC,GAAQC,GAAe1C,EAAOD,YAC7C,IAAMzF,EAAWC,aAAY,WACzBiI,GAAeC,GAAQC,GAAe1C,EAAOD,WACjD,GAAG,KACH,OAAO,kBAAMvF,cAAcF,EAAU,CACzC,IAEA,IAgBMwN,GAAiB,SAACd,EAAgBe,GACpC,OAAO,IAAIte,SAAQ,SAAC0d,EAASa,GACzBhB,EACKhc,QACA0Z,UAAUthB,EAAOC,QAAS4C,GAC1BuD,MAAK,SAACO,EAAKF,GACHA,EAAIsC,KAAAC,IAAI,GAAM4T,EAAO3a,OAAOgc,MAAMC,WAAcyG,EACjDZ,IAEAa,GAER,GACR,GACJ,EAEMC,GAAoB,SAACjB,EAAgBe,GACvC,OAAO,IAAIte,SAAQ,SAAC0d,EAASa,GACzBhB,EACKhc,QACAkd,QAAQjiB,EAAkB2e,EAAYnJ,YACtCG,KAAK,CAACC,KAAMzY,EAAOC,QAAS0X,SAAU,OACtCgB,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZpD,GAAW,GACXoO,GACJ,GACR,GACJ,EAuHMgB,GAAa,WACf,OAAQ1I,GACJ,IAAK,OACD,GAAqB,QAAjBrc,EAAOG,MAAiB,OAAO,EACnC,MACJ,IAAK,MACD,GAAqB,KAAjBH,EAAOG,MAAc,OAAO,EAChC,MACJ,IAAK,OACD,GAAqB,MAAjBH,EAAOG,MAAe,OAAO,EACjC,MACJ,QACI,OAAO,EAEnB,EAEM6kB,GAAa,eAAAvhB,EAAA6T,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAwN,EAAAlf,EAAA,OAAAwR,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdkN,EAAU,IAAGpN,EAAAqN,GACT7I,EAAOxE,EAAAE,KACN,SADMF,EAAAqN,GACA,EAGN,QAHMrN,EAAAqN,GAGD,EAGL,SAHKrN,EAAAqN,GAGC,kBALS,OAAhBD,EAAU,MAAMpN,EAAAsN,OAAA,mBAGH,OAAbF,EAAU,GAAGpN,EAAAsN,OAAA,mBAGC,OAAdF,EAAU,IAAIpN,EAAAsN,OAAA,2BAAAtN,EAAAsN,OAAA,UAGP,GAAK,QAGkB,OAAhCpf,EAAO,IAAIuB,IAAK0Q,OAAOC,UAASJ,EAAAE,KAAA,GAChCC,OAAOoN,SAASve,QAAQ,CAC1Bwe,OAAQ,6BACRC,OAAQ,CAAC,CAACC,QAASxf,EAAKgR,MAAMyO,MAAMP,OACrC,KAAD,oBAAApN,EAAAwB,OAAA,GAAA5B,EAAA,KACL,kBArBkB,OAAAhU,EAAA6V,MAAA,KAAAC,UAAA,KA8DnB,GAAIjW,OAAOC,QAAQqZ,GAAQhK,OAAS,EAChC,OAAO1B,eAACsC,GAAc,CAACE,MAAM,EAAM/C,MAAM,eAsP7C,OACIgD,gBAAC6F,IAAS,CAACC,SAAS,KAAIhI,SAAA,CACpBkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGxI,MAAO,CAACyI,cAAe,IAAIpI,SAAA,CACnDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACuU,KAAG,CAACpF,GAAI,WAAYqF,UAAWtF,KAAYjM,KAAK,QAC5C/C,MAAO,CAAClB,SAAU,QAASC,IAAK,EAAGwV,KAAM,GAAIC,OAAQ,OAAOnU,SAACP,eAAC2U,KAAa,QAI7D,+CAAnB7lB,EAAOC,SAA4DiR,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACjFP,eAACiK,GAAK,CAAA1J,SACFkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEnI,SAAA,CACvBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmJ,IAAM,CACH1I,QAAQ,YACRH,WAAS,EACTX,SAAiC,IAAvB+L,EAAOoC,cAAsB+F,KACvCpK,QAlQhB,WACZ3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQke,cACnBtN,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EA+OyDlE,SAAC,mBAE9BP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmJ,IAAM,CACH1I,QAAQ,YACRH,WAAS,EACTX,SAAiC,IAAvB+L,EAAOoC,cAAsB+F,KACvCpK,QArPjB,WACX3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQme,aACnBvN,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAkOwDlE,SAAC,kBAE7BP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmJ,IAAM,CACH1I,QAAQ,YACRH,WAAS,EACTX,SAAiC,IAAvB+L,EAAOoC,cAAsB+F,KACvCpK,QAxOhB,WACZ3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQoe,cACnBxN,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAqNyDlE,SAAC,mBAE9BP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACmJ,IAAM,CACH1I,QAAQ,YACRH,WAAS,EACTX,SAAiC,IAAvB+L,EAAOoC,cAAsB+F,KACvCpK,QA3Nd,WACd3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQqe,gBACnBzN,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAwM2DlE,SAAC,iBAEhCP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,YACNG,MAAO8Q,EACP7Q,SAAU,SAAAmJ,GAAE,OAAI2H,EAAa3H,EAAGC,OAAOrJ,MAAM,EAC7CoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QAnNxB,WACZ3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQse,YAAYtE,GAC/BpJ,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAgMiElE,SAAC,gBAItCP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,cACNG,MAAOgR,EACP/Q,SAAU,SAAAmJ,GAAE,OAAI6H,EAAe7H,EAAGC,OAAOrJ,MAAM,EAC/CoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QA7MtB,WACd3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQue,cAAcrE,GACjCtJ,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EA0LmElE,SAAC,gBAIxCP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,cACNG,MAAOoR,EACPnR,SAAU,SAAAmJ,GAAE,OAAIiI,EAAejI,EAAGC,OAAOrJ,MAAM,EAC/CoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QAvMtB,WACd3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQwe,cAAclE,GACjC1J,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAoLmElE,SAAC,gBAIxCP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,8BACNG,MAAOwR,EACPvR,SAAU,SAAAmJ,GAAE,OAAIqI,EAA0BrI,EAAGC,OAAOrJ,MAAM,EAC1DoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QAjMX,WACzB3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQye,yBAAyB/D,GAC5C9J,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EA8K8ElE,SAAC,gBAInDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,cACNG,MAAO4R,GACP3R,SAAU,SAAAmJ,GAAE,OAAIyI,GAAczI,EAAGC,OAAOrJ,MAAM,EAC9CoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QA3LvB,WACb3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQ0e,aAAa5D,IAChClK,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAwKkElE,SAAC,gBAIvCP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,wBACNG,MAAOgS,GACP/R,SAAU,SAAAmJ,GAAE,OAAI6I,GAAoB7I,EAAGC,OAAOrJ,MAAM,EACpDoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QArLjB,WACnB3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQ2e,mBAAmBzD,IACtCtK,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAkKwElE,SAAC,gBAI7CP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,sBACNG,MAAOoS,GACPnS,SAAU,SAAAmJ,GAAE,OAAIiJ,GAAkBjJ,EAAGC,OAAOrJ,MAAM,EAClDoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QA/KnB,WACjB3a,EAAOC,UACP0V,GAAW,GAEa,IADX,IAAIrO,IAAK0Q,OAAOC,UACIxX,IAAI+G,UAAS4U,GAAmBvZ,GAEjD+E,QAAQ4e,iBAAiBtD,IACpC1K,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EA4JsElE,SAAC,gBAI3CP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACQ,KAAS,CACNF,WAAS,EACTb,MAAM,cACNG,MAAOwS,GACPvS,SAAU,SAAAmJ,GAAE,OAAIqJ,GAAerJ,EAAGC,OAAOrJ,MAAM,EAC/CoB,WAAY,CACRjB,aAAcC,eAACmJ,IAAM,CACjB1I,QAAQ,YACRd,UAAWkU,KACXpK,QAzKzB,WACX3a,EAAOC,UACP0V,GAAW,GAEM,IADJ,IAAIrO,IAAK0Q,OAAOC,UACHxX,IAAI+G,UAASiW,GAAQb,EAAO3a,OAAOyb,QAAQzB,IAE5DrU,QAAQ6e,SAAS5jB,EAAkBmU,GAAMsM,GAAc1G,EAAOc,UAClElF,KAAK,CAACC,KAAMzY,EAAOC,UACnB0Y,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,IAEZ,EAsJgElE,SAAC,uBASrDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACiK,GAAK,CAAA1J,SACFP,eAACuO,KAAI,CAACC,gBAAc,EAAAjO,SAChBP,eAACyO,IAAQ,CAACD,gBAAc,EAAAjO,SACpBP,eAAC8O,IAAY,CACTtQ,QAAO,GAAAxK,OAAKoO,GAAoBsJ,EAAOiC,eAAc,KAAA3Z,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QAC/EC,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,KACTS,UAAW,UAEfxC,UAAU,0BACV8W,yBAA0B,CAACtU,UAAW,oBAQhC,IAAtBwK,EAAOmB,YAAoB7M,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACzCkC,gBAACwH,GAAK,CAAA1J,SAAA,CAEG6N,GAAe1C,EAAOD,UAAY,EAC/BhJ,gBAACU,KAAU,CAAC1C,QAAQ,UAAUP,MAAO,CACjCqJ,MAAO,OACPR,QAAS,oBACXxI,SAAA,CAAC,cAAY0N,MACbjO,eAACmD,KAAU,CAAC1C,QAAQ,UACRP,MAAO,CAACqJ,MAAO,OAAQR,QAAS,oBAAoBxI,SAAC,uBAI3EkC,gBAACU,KAAU,CAAC1C,QAAQ,UAAUP,MAAO,CACjCqJ,MAAO,QACPR,QAAS,oBACXxI,SAAA,CAAC,gBAAcmL,EAAO0B,eAAe,YAAU1B,EAAOwB,YAExDzK,gBAAC8L,KAAI,CAAAhO,SAAA,CACDkC,gBAACgM,IAAQ,CAAAlO,SAAA,CACLP,eAAC8O,IAAY,CACTtQ,QAASiX,GAAc/J,EAAOU,QAAStd,EAAOC,SAC9CigB,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,MAEb/B,UAAU,eACdsB,eAAC8O,IAAY,CACTtQ,QAASkX,GAAQhK,EAAOU,QAAStd,EAAOC,SAAW,IACnDigB,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,MAEb/B,UAAU,YACdsB,eAAC8O,IAAY,CACTtQ,QAAO,GAAAxK,OAAKoO,GAAoBsJ,EAAOc,SAAQ,KAAAxY,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QACzEC,uBAAwB,CACpB9O,MAAO,CAAC+O,WAAY,KACpBxO,QAAS,KACTS,UAAW,SAEfxC,UAAS,GAAA1K,OAA2B,IAAtB0X,EAAOmC,YAA0C,IAAtBnC,EAAOmC,WAAmB,GAAK,UAAS,YACjF2H,yBAA0B,CAACtU,UAAW,cAI9ClB,eAACyO,IAAQ,CAACvO,MAAO,CAAC6I,QAAS,UAAUxI,SACjCP,eAAC2V,KAAM,CACHC,KAAMlK,EAAO0B,eAAiBqI,GAAc/J,EAAOU,QAAStd,EAAOC,SAAW,GAAK,GAAK,EACxF8mB,OAAK,EACLC,IAAK,EACLpW,IAAKgM,EAAO0B,eAAiBqI,GAAc/J,EAAOU,QAAStd,EAAOC,SAClE6Q,MAAO4Q,EACP3Q,SAAU,SAACmJ,EAAI6B,GACX4F,EAAc5F,EAClB,MAIR7K,eAACyO,IAAQ,CAAAlO,SAEDsT,KAEI7T,eAACwI,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEnI,SACvBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACmJ,IAAM,CACH7I,WAAS,EACTG,QAAQ,YACRd,SAAU6E,GArf/B,IAAvBkH,EAAOoC,aAGP2H,GAAc/J,EAAOU,QAAStd,EAAOC,UAAY2c,EAAO0B,gBAGrDgB,GAAe1C,EAAOD,UAAY,EAgfOhC,QAAoC,+CAA3BiC,EAAO3a,OAAOgc,MAAMhC,GAAsD,kBArlB9G,SAAC1Y,GACtBoS,GAAW,GACX,IAAM5P,EAAO,IAAIuB,IAAK0Q,OAAOC,UACZ,IAAIlS,EAAKtF,IAAI+G,SAAS4U,GAAmBvZ,GAEjD+E,QAAQqf,WAAW1jB,GACvBiV,KACG,CACIC,KAAMzY,EAAOC,QACb6Q,MAAO/K,EAAKgR,MAAMC,OAAO4F,EAAOmB,WAAaxa,GAAS8U,YACtDK,IAAK,IACLf,SAAU,OAGjBgB,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,GACR,CA6jB6IuR,CAAiBxF,EAAW,EAAG,kBAjpBzJ,SAACne,GAChB,GAAIvD,EAAOC,QAAS,CAChB0V,GAAW,GACX,IAAM5P,EAAO,IAAIuB,IAAK0Q,OAAOC,UACvB2L,EAAiB,IAAI7d,EAAKtF,IAAI+G,SAASiW,GAAQb,EAAO3a,OAAOgc,MAAMhC,IACnEe,EAAkB,IAAIjX,EAAKtF,IAAI+G,SAAS4U,GAAmBvZ,GAEjEU,EAAUA,GAAW,EAErB,IAAM4jB,EAAc,WAChBnK,EAAgBpV,QAAQqf,WAAW1jB,GAC9BiV,KAAK,CAACC,KAAMzY,EAAOC,QAAS0X,SAAU,OACtCgB,KAAK,mBAAmB,SAAUC,GAC/BjD,GAAW,EACf,IACCkD,GAAG,SAAS,SAAUC,GACnBnD,GAAW,EACf,IACCnP,MAAK,SAAUuS,GACZkE,GAAcpa,EAAkBga,GAChClH,GAAW,EACf,GACR,EAEA+O,GAAed,EAAgBhH,EAAOmB,WAAaxa,GAC9CiD,KAAK2gB,GACLzgB,OAAM,WACHuE,QAAQC,IAAI,0BACZ2Z,GAAkBjB,GAAgBpd,KAAK2gB,EAC3C,GAER,CACJ,CAinBkLC,CAAW1F,EAAW,EAACjQ,SAphBlL,WAAkB,IAAjBlO,EAAOgW,UAAA3G,OAAA,QAAA1S,IAAAqZ,UAAA,GAAAA,UAAA,GAAG,EAC9B,GAA2B,IAAvBqD,EAAOoC,YACP,MAAO,gBAEX,GAAI2H,GAAc/J,EAAOU,QAAStd,EAAOC,UAAY2c,EAAO0B,eACxD,MAAO,cAEX,GAAIgB,GAAe1C,EAAOD,UAAY,EAClC,MAAO,yBAEX,IAAImI,EAAU,GAYd,MAV+B,+CAA3BlI,EAAO3a,OAAOgc,MAAMhC,KAChBqF,EAAY1E,EAAOmB,aACnB+G,EAAU,cAGVvhB,EAAU,GAAK+d,EAAY1E,EAAOmB,WAAaxa,IAC/CuhB,EAAU,eAIdvhB,EAAU,EACJ,GAAN2B,OAAU4f,EAAO,QAAA5f,OAAO3B,EAAO,cAAA2B,OAAa0X,EAAOmB,WAAaxa,EAAO,KAAA2B,OAAI0X,EAAO3a,OAAOgc,MAAMgC,OAAM,KAGnG,GAAN/a,OAAU4f,EAAO,QAAA5f,OAAO3B,EAAO,aAAA2B,OAAY0X,EAAOmB,WAAU,KAAA7Y,OAAI0X,EAAO3a,OAAOgc,MAAMgC,OAAM,IAC9F,CA2fqDoH,CAAe3F,SAK5BxQ,eAACmJ,IAAM,CACH7I,WAAS,EACTG,QAAQ,YACRgJ,QAASqK,GAAcvT,SAAC,qBAKnC6N,GAAe1C,EAAOD,UAAY,GAAMzL,eAACyO,IAAQ,CAAAlO,SAC9CP,eAACmJ,IAAM,CACH7I,WAAS,EACTG,QAAQ,YACRd,UAAiC,IAAtB+L,EAAOmC,YAA0C,IAAtBnC,EAAOmC,aACxCnC,EAAOuH,gBAAkB,IAAO,GAAwB,+CAAnBnkB,EAAOC,QACjD0a,QAvvBrB,WAEE,IADJ,IAAIrT,IAAK0Q,OAAOC,UACHxX,IAAI+G,UAAS4U,GAAmBvZ,GACjD+E,QAAQ0f,WAAW,WAAa,IAAIhP,MAAQC,WAChDC,KACG,CACIC,KAAMzY,EAAOC,UAGpBuG,MAAK,SAAUuS,GACZkE,IACJ,IACCvW,OAAM,SAAA6gB,GAAC,OAAItc,QAAQC,GAAG,GAE/B,EAyuB4DuG,SAAC,kBAK5B6N,GAAe1C,EAAOD,UAAY,IACZ,IAAtBC,EAAOmC,YAA0C,IAAtBnC,EAAOmC,aAClCnC,EAAOuH,gBAAkB,IAAO,GAAKjT,eAACyO,IAAQ,CAAAlO,SAC3CP,eAACmD,KAAU,CAAC1C,QAAQ,UAASF,SAAC,2HAWtDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACiK,GAAK,CAAA1J,SACFP,eAACuO,KAAI,CAAAhO,SACDkC,gBAACgM,IAAQ,CAAAlO,SAAA,CACLP,eAAC8O,IAAY,CACTtQ,QAAO,QAAAxK,OAAU0X,EAAOyH,eAAenJ,QAAQ,IAC/CtL,UAAU,oBAEdsB,eAAC8O,IAAY,CACTtQ,QAAO,GAAAxK,OAAKoO,GAAoBsJ,EAAO2H,gBAAexb,KAAAC,IAAI,GAAM4T,EAAO3a,OAAOyb,QAAQQ,WAAU,KAAAhZ,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QAC1HC,uBAAwB,CAAC9N,UAAW,SACpCxC,UAAU,SACV8W,yBAA0B,CAACtU,UAAW,oBAO1DlB,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACiK,GAAK,CAAA1J,SACFkC,gBAAC8L,KAAI,CAAAhO,SAAA,CACDP,eAACmD,KAAU,CAACjD,MAAO,CAACnB,WAAY,IAAIwB,SAAC,mBACrCkC,gBAACgM,IAAQ,CAAAlO,SAAA,CACLP,eAAC8O,IAAY,CACTtQ,QAASkN,EAAO8G,YAAYngB,QAC5BqM,UAAU,eAEdsB,eAAC8O,IAAY,CACTtQ,QAASkN,EAAO8G,YAAY8D,KAC5B5X,UAAU,YAEdsB,eAAC8O,IAAY,CACTtQ,QAAO,GAAAxK,OAAKoO,GAAoBsJ,EAAO8G,YAAY+D,SAAQ1e,KAAAC,IAAI,GAAM4T,EAAO3a,OAAOyb,QAAQQ,WAAU,KAAAhZ,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QAC/HrQ,UAAU,0BAO9BsB,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACiK,GAAK,CAAC/J,MAAO,CAAC6I,QAAS,IAAIxI,SACxBkC,gBAAC8L,KAAI,CAACiI,OAAK,EAAChI,gBAAc,EAAAjO,SAAA,CAElBmL,EAAOU,QAAQ1K,OAAS,GAAKe,gBAAAiH,YAAA,CAAAnJ,SAAA,CACzBkC,gBAACU,KAAU,CAAA5C,SAAA,CAAEmL,EAAOU,QAAQ1K,OAAO,cAClC+U,GAAe/K,EAAOU,QAAStd,EAAOC,YAK3C2c,EAAOU,QAAQ1K,QAAU,GAAK1B,eAACyO,IAAQ,CAAAlO,SACnCP,eAAC8O,IAAY,CAACtQ,QAAQ,yBASf,IAAtBkN,EAAOmC,YAA0C,IAAtBnC,EAAOmC,aAAqB7N,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACtEP,eAACiK,GAAK,CAAC/J,MAAO,CAAC6I,QAAS,IAAIxI,SACxBP,eAACuO,KAAI,CAACiI,OAAK,EAAChI,gBAAc,EAAAjO,SACtBkC,gBAACgM,IAAQ,CAAAlO,SAAA,CACLP,eAAC8O,IAAY,CACTtQ,QAAO,GAAAxK,OAAK0X,EAAOoH,oBAAmB,KAAA9e,OAAI0X,EAAO3a,OAAOyb,QAAQuC,QAChErQ,UAAU,qBAEdsB,eAAC8O,IAAY,CACTtQ,QAASkN,EAAOuH,gBAChBvU,UAAU,8BAQtCsB,eAACsC,GAAc,CAACE,KAAMgC,EAAS/E,MAAM,0BAGjD,CAEA,SAAS2O,GAAesB,GACpB,OAAOA,EAAI,IAAItI,IACnB,CAEA,SAAS+G,GAAQwB,GACb,IACIC,EAAKD,EAAK,KAAS,IAAM,EACzBE,EAAKF,EAAK,IAAO,IAAM,EAC3B,MAAM,GAAN3b,OAHQ2b,EAAK,KAAQ,EAGV,KAAA3b,QAAK,GAAK4b,GAAGE,SAAS,EAAG,KAAI,KAAA9b,QAAK,GAAK6b,GAAGC,SAAS,EAAG,KACrE,CAEA,SAAS2F,GAAczH,EAAOpO,GAC1B,OAAOoO,EAAMsB,QAAO,SAACC,GAAC,OAAMA,IAAM3P,CAAK,IAAG8B,MAC9C,CAEA,SAASgU,GAAQ1H,EAAOpO,GACpB,OAAqB,IAAjBoO,EAAMtM,OAAqB,GAEtB+T,GAAczH,EAAOpO,GAASoO,EAAMtM,OAAU,KAAKF,QAAQ,EACxE,CAEA,SAASiV,GAAerK,EAAStd,GAE7B,IACI4nB,EAAeC,EADfC,EAAO,GACoBC,EAAQ,EA0BvC,OAxBAzK,EAAQ9Z,KAAI,SAACwkB,EAAQC,GAsBjB,OArBAL,EAAgBI,EAChBH,EAAavK,EAAQ2K,EAAI,GAGrBL,IAAkBC,EAClBE,KAGAD,EAAKI,KAAKhX,eAACyO,IAAQ,CAAuBD,gBAAc,EAAAjO,SACpDP,eAAC8O,IAAY,CACTtQ,QAAO,OAAAxK,OAAS8iB,EAAO9M,QAAQ,GAAE,KAAAhW,OAAI6iB,EAAQ,EAAIA,EAAQ,IAAM,IAC/D7H,uBAAwB,CACpBhM,MAAO8T,EAAOG,gBAAkBnoB,EAAOmoB,cAAgB,YAAc,GACrExW,QAAS,UACTtC,WAAY,gBANC2Y,EAAS,GAAKC,IAWvCF,EAAQ,GAELC,CACX,IACOF,CACX,C,iECriCMM,GAAYtY,cAAW,SAACZ,GAAK,MAAM,CACrCmZ,OAAQ,CACJxU,OAAQ,UAEf,IAoHcyU,OAlHf,SAAoB5X,GAChB,IAAMoM,EAAUsL,KAETG,EAAkB7X,EAAlB6X,OAAQC,EAAU9X,EAAV8X,OAETC,EAAU,IAAM,OAAS1f,KAAK2f,GAAK,KAEnCC,EAAiBH,EAAOD,EAAd,KAAyBxf,KAAK2f,GAAK,KAE7CE,EAAS,CAEXC,YAAa,EACbC,UAAWH,EAEXI,YAAcJ,EAAUF,EACxBO,UAAkBjgB,KAAK2f,GAAK,IAAjB,IAAwBD,GAIjCQ,EACM,UADNA,EAEM,UAGZ,YACe/oB,IAAXqoB,EAEOrX,eAAC8I,IAAK,CAAC5I,MAAO,CAAC6I,QAAS,IAAIxI,SAC/BP,eAACyP,KAAQ,CAAChP,QAAQ,WAAWvB,OAAQ,IAAKC,MAAO,IAAKe,MAAO,CAACyC,OAAQ,cAK1EF,gBAACqG,IAAK,CAAC5I,MAAO,CAAC6I,QAAS,IAAIxI,SAAA,CACxBP,eAACgY,KAAmB,CAChBC,QAAS,EAAE,EAAG,GACdC,QAAS,EAAE,EAAG,GACdhZ,OAAQ,IACRyD,OAAQ,CAAC8R,KAAM,EAAG0D,MAAO,EAAGlZ,IAAK,EAAGmZ,OAAQ,GAC5CxJ,UAAWhD,EAAQuL,OAAO5W,SAE1BP,eAACqY,KAAS,CACNC,aAAc,CAAC,EAAG,IAClBC,OAAQ,CAACC,EAAG,EAAGC,EAAG,GAClB7iB,KAAM,CACF,CACI8iB,OAAQhB,EAAOG,YACfc,MAAOjB,EAAOI,UACdc,QAAS,EACTC,OAAQ,KACRC,QAAS,EACT9V,MAAO+U,GAEX,CACIW,OAAQhB,EAAOC,YACfgB,MAAOjB,EAAOE,UACdgB,QAAS,EACTC,OAAQ,KACRC,QAAS,EACT9V,MAAO+U,IAGfgB,UAAW,cAInBtW,gBAACU,KAAU,CACPjD,MAAO,CACHhB,OAAQ,EACRC,MAAO,OACP+B,UAAW,SACXjC,KAAM,IACND,SAAU,WACVga,SAAU,GACV/J,WAAY,OACd1O,SAAA,EAEC+W,EAAOD,EAAU,KAAK7V,QAAQ,GACjCxB,eAAA,QACIE,MAAO,CACH8Y,SAAU,GACV/J,WAAY,MACZ7L,WAAY,GACZhE,QAAS,SACXmB,SACL,gBAKLkC,gBAAC+F,IAAI,CAACC,WAAS,EAAAlI,SAAA,CAEXP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACiZ,GAAY,CAACC,KAAMlZ,eAACmZ,KAAS,CAACjZ,MAAO,CAAC8C,MAAO+U,KAAmB/U,MAAO+U,EAC1DnY,MAAOyX,EACP5X,MAAM,aAExBO,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACiZ,GAAY,CAACC,KAAMlZ,eAACoZ,KAAQ,CAAClZ,MAAO,CAAC8C,MAAO+U,KAAmB/U,MAAO+U,EACzDnY,MAAO0X,EACP7X,MAAM,aAGxBO,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,EAAEtI,SACbP,eAACiZ,GAAY,CAACC,KAAMlZ,eAACmZ,KAAS,CAACjZ,MAAO,CAAC8C,MAAO+U,KAAmB/U,MAAO+U,EAC1DnY,MAAOyX,EAASC,EAChB7X,MAAM,uBAMxC,EAIA,SAASwZ,GAAazZ,GAClB,IAAOwD,EAA6BxD,EAA7BwD,MAAOpD,EAAsBJ,EAAtBI,MAAOH,EAAeD,EAAfC,MAAOyZ,EAAQ1Z,EAAR0Z,KAE5B,OAAOzW,gBAACgM,IAAQ,CAACD,gBAAc,EAAAjO,SAAA,CAC3BP,eAACqZ,KAAY,CAACnZ,MAAO,CAACoZ,YAAa,IAAI/Y,SAClC2Y,IAELlZ,eAAC8O,IAAY,CACTtQ,QAAS4D,GAAoBxC,GAC7BlB,UAAWe,EACXuP,uBAAwB,CAACC,WAAY,IAAK/O,MAAO,CAAC8C,UAClDwS,yBAA0B,CAACwD,SAAU,SAAU9Y,MAAO,CAAC8C,cAGnE,C,WCxIMnO,GAAO,IAAIuB,IAAK,sCAGhBtB,GAAQ,CAFO,IAAID,GAAKtF,IAAI+G,SAAS+D,GAAa,8CAGvC3D,QAAQ+E,cAAcvG,MAIjCqkB,GAAW,IAAInjB,IAAK,wBAGpBojB,GAAY,CAFQ,IAAID,GAAShqB,IAAI+G,SAAS+D,GAAa,8CAG3C3D,QAAQ+E,cAAcvG,MAG7B,SAASukB,KAEpB,IAAA5V,EAA4BC,mBAAS,GAAEC,EAAAtR,YAAAoR,EAAA,GAAhCwT,EAAMtT,EAAA,GAAE2V,EAAS3V,EAAA,GACxBG,EAA4BJ,mBAAS,GAAEK,EAAA1R,YAAAyR,EAAA,GAAhCoT,EAAMnT,EAAA,GAAEwV,EAASxV,EAAA,GACxBG,EAAgCR,mBAAS,QAAOS,EAAA9R,YAAA6R,EAAA,GAAzC+F,EAAQ9F,EAAA,GAAE+F,EAAW/F,EAAA,GAE5BG,EAAoCZ,mBAAS,GAAEa,EAAAlS,YAAAiS,EAAA,GAAxCkV,EAAUjV,EAAA,GAAEkV,EAAalV,EAAA,GAChCG,EAAoChB,mBAAS,GAAEiB,EAAAtS,YAAAqS,EAAA,GAAxCgV,EAAU/U,EAAA,GAAEgV,EAAahV,EAAA,GAwBhC,OAtBAW,qBAAU,WACN9Q,EAAiBC,GAAMC,IAAOQ,MAAK,SAAAC,GAC/B,IACIykB,EADJvnB,YAEI8C,EAAI,GADO,GAGfmkB,EAAU,KACVC,EAAU,IAAYK,EAAWniB,KAAAC,IAAI,GAAM,GAC/C,GACJ,GAAG,IAEH4N,qBAAU,WACN9Q,EAAiB2kB,GAAUC,IAAWlkB,MAAK,SAAAC,GACvC,IACIykB,EADJvnB,YAEI8C,EAAI,GADO,GAGfskB,EAAc,KACdE,EAAc,IAAYC,EAAWniB,KAAAC,IAAI,GAAM,IACnD,GACJ,GAAG,IAGCkI,eAACsI,IAAS,CAACC,SAAS,KAAIhI,SACpBkC,gBAAC+F,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGxI,MAAO,CAACkD,WAAY,EAAGuF,cAAe,IAAIpI,SAAA,CAClEP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdkC,gBAACmI,KAAI,CACDnK,QAAQ,YACRb,MAAOyK,EACPxK,SAAU,SAACmJ,EAAI6B,GACXP,EAAYO,EAChB,EAAEtK,SAAA,CAEFP,eAAC8K,KAAG,CAACC,GAAG,OAAOnL,MAAM,OAAOH,MAAM,SAClCO,eAAC8K,KAAG,CAACC,GAAG,MAAMnL,MAAM,MAAMH,MAAM,aAMvB,SAAb4K,GAAuBrK,eAAA0J,YAAA,CAAAnJ,SAEnBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACoX,GAAU,CACPC,OAAQuC,EACRtC,OAAQwC,QAMP,QAAbzP,GAAsBrK,eAAA0J,YAAA,CAAAnJ,SAiClBP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdP,eAACoX,GAAU,CACPC,OAAQA,EACRC,OAAQA,YAWxC,CCmFe2C,OAtLf,WAA6B,IAADC,EAElBljB,EAAWmjB,cACVrrB,EAAU6U,aAAY,SAAAtS,GAAK,OAAIA,EAAMmD,OAAO,IAA5C1F,OAEP+U,EAA4BC,mBAAS,GAAEC,EAAAtR,YAAAoR,EAAA,GAAhCuW,EAAMrW,EAAA,GAAEsW,EAAStW,EAAA,GAExBG,EAAkCJ,mBAAS,MAAKK,EAAA1R,YAAAyR,EAAA,GAAzCoW,EAASnW,EAAA,GAAEoW,EAAYpW,EAAA,GACxBqW,ECtCK,WAEX,IAAMC,EAAY,eAAAloB,EAAA6T,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAmU,EAAA,OAAArU,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAqBf,OAnBI6T,EAAkB,CACpBC,cAAe,CACXvb,QAAS,CACLlO,KAAM,gBACN0pB,YAAa,uCAEjBC,QAASC,IACTC,QAAS,CACLC,OAAQ,mCACR7P,QAAS,UACTra,IAAK,CACD,GAAI,oCACJ,IAAK,sBACL,MAAO,wCACP,EAAG,+BAEPmqB,QAAQ,KAGnBtU,EAAAsN,OAAA,SAEM,IAAIiH,IAAU,CACjBC,yBAAyB,EACzBC,eAAe,EACfV,qBACF,wBAAA/T,EAAAwB,OAAA,GAAA5B,EAAA,KACL,kBA5BiB,OAAAhU,EAAA6V,MAAA,KAAAC,UAAA,KA8BlB,MAAO,CACHoS,eAER,CDG8BY,GASI,SAAAC,IAO7B,OAP6BA,EAAAlV,YAAAC,cAAAC,MAA9B,SAAAiV,IAAA,IAAAC,EAAAzU,EAAA,OAAAV,cAAAK,MAAA,SAAA+U,GAAA,cAAAA,EAAA7U,KAAA6U,EAAA5U,MAAA,cAAA4U,EAAA5U,KAAA,EAC0B2T,EAAkBC,eAAe,KAAD,EAAzC,KAAPe,EAAOC,EAAAxU,MACDyU,mBAAmBC,eAAe,CAADF,EAAA5U,KAAA,eAAA4U,EAAA5U,KAAA,EAClB2U,EAAQI,UAAS,OAA1B,OAAR7U,EAAQ0U,EAAAxU,KAAAwU,EAAA5U,KAAA,EACRgV,EAAgB9U,GAAS,OAEnCwT,EAAaiB,GAAS,yBAAAC,EAAAtT,OAAA,GAAAoT,EAAA,MACzBnT,MAAA,KAAAC,UAAA,CAE2B,SAAAyT,IAG3B,OAH2BA,EAAA1V,YAAAC,cAAAC,MAA5B,SAAAyV,IAAA,IAAAhV,EAAA,OAAAV,cAAAK,MAAA,SAAAsV,GAAA,cAAAA,EAAApV,KAAAoV,EAAAnV,MAAA,cAAAmV,EAAAnV,KAAA,EAC2ByT,EAAUsB,UAAU,KAAD,EAA5B,OAAR7U,EAAQiV,EAAA/U,KAAA+U,EAAAnV,KAAA,EACRgV,EAAgB9U,GAAS,wBAAAiV,EAAA7T,OAAA,GAAA4T,EAAA,MAClC3T,MAAA,KAAAC,UAAA,CAnBD3C,qBAAU,WACFoB,OAAOoN,UACP2H,EAAgB/U,OAAOoN,UAGxB,WAEuBoH,EAAAlT,MAAC,KAADC,UAAA,CAH1B4T,EACJ,GAAG,IAgBH,IAAMJ,EAAe,eAAAtpB,EAAA6T,YAAAC,cAAAC,MAAG,SAAAC,EAAOQ,GAAQ,IAAAlS,EAAAqnB,EAAA7H,EAAA,OAAAhO,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGR,OAF3BC,OAAOC,SAAWA,EACZlS,EAAO,IAAIuB,IAAK2Q,GACtBoV,EAAkBpV,GAASJ,EAAAE,KAAA,EACJhS,EAAKtF,IAAI6sB,cAAc,KAAD,EAKrB,OALlBF,EAAQvV,EAAAM,OACEiV,EAASxa,QAErB1K,EAASxF,EAAoB0qB,EAAS,KACzCvV,EAAAqN,GACevH,SAAQ9F,EAAAE,KAAA,GAAOhS,EAAKtF,IAAI8sB,IAAIC,QAAO,QAAA3V,EAAA4V,GAAA5V,EAAAM,KAA7CoN,GAAO,EAAA1N,EAAAqN,IAAArN,EAAA4V,IACbvlB,EAAS5F,EAAkBijB,IAC3Brd,EAASvF,EAA2BsV,EAASiU,OAAS,gBAAkB,aAAY,yBAAArU,EAAAwB,OAAA,GAAA5B,EAAA,KACvF,gBAZoBiW,GAAA,OAAAjqB,EAAA6V,MAAA,KAAAC,UAAA,KAcf8T,EAAoB,SAACpV,GACvBA,EAASY,GAAG,SAAS,WACjB8U,GACJ,IAEA1V,EAASY,GAAG,kBAAiB,eAAAnV,EAAA4T,YAAAC,cAAAC,MAAE,SAAAoW,EAAOC,GAAG,OAAAtW,cAAAK,MAAA,SAAAkW,GAAA,cAAAA,EAAAhW,KAAAgW,EAAA/V,MAAA,OACjCC,OAAOC,UACP/P,EAASxF,EAAoBmrB,EAAI,KACpC,wBAAAC,EAAAzU,OAAA,GAAAuU,EAAA,KACJ,gBAAAG,GAAA,OAAArqB,EAAA4V,MAAA,KAAAC,UAAE,CAAF,CAJ4B,IAM7BtB,EAASY,GAAG,eAAc,eAAAhV,EAAAyT,YAAAC,cAAAC,MAAE,SAAAwW,EAAOC,GAAS,IAAA1I,EAAA,OAAAhO,cAAAK,MAAA,SAAAsW,GAAA,cAAAA,EAAApW,KAAAoW,EAAAnW,MAAA,OACpCC,OAAOC,WACDsN,EAAU5H,SAASsQ,GACzB/lB,EAAS5F,EAAkBijB,KAC9B,wBAAA2I,EAAA7U,OAAA,GAAA2U,EAAA,KACJ,gBAAAG,GAAA,OAAAtqB,EAAAyV,MAAA,KAAAC,UAAE,CAAF,CALyB,GAM9B,EAEMoU,EAAW,eAAA7pB,EAAAwT,YAAAC,cAAAC,MAAG,SAAA4W,IAAA,IAAAroB,EAAA,OAAAwR,cAAAK,MAAA,SAAAyW,GAAA,cAAAA,EAAAvW,KAAAuW,EAAAtW,MAAA,OACuB,MAAjChS,EAAO,IAAIuB,IAAK0Q,OAAOC,YACjBlS,EAAKuoB,iBAAmBvoB,EAAKuoB,gBAAgBC,OAAK,CAAAF,EAAAtW,KAAA,eAAAsW,EAAAtW,KAAA,EACpDhS,EAAKuoB,gBAAgBC,QAAQ,KAAD,EAEf,OAAvBrmB,EAASnE,KAAcsqB,EAAAtW,KAAA,EACjByT,EAAUgD,sBAAsB,KAAD,EACrCxW,OAAOC,SAAW,KAAK,wBAAAoW,EAAAhV,OAAA,GAAA+U,EAAA,KAC1B,kBARgB,OAAAtqB,EAAAwV,MAAA,KAAAC,UAAA,KAwBjB,OAbA3C,qBAAU,WACN1P,IACA,IAAMgQ,EAAWC,aAAY,kBAAMjQ,GAAe,GAAE,KACpD,OAAO,kBAAMkQ,cAAcF,EAAU,CACzC,GAAG,CAAClX,EAAOC,UAGX2W,qBAAU,WACNxL,GAAgBpL,EAAOC,SACvB,IAAMiX,EAAWC,aAAY,kBAAM/L,GAAgBpL,EAAOC,QAAQ,GAAE,KACpE,OAAO,kBAAMmX,cAAcF,EAAU,CACzC,GAAG,CAAClX,EAAOC,UAGP0T,gBAAC8a,IAAa,CAACvf,MAAOA,GAAMuC,SAAA,CACxBP,eAACwd,IAAW,IACZxd,eAACsI,IAAS,CAACC,SAAU,KAAMrI,MAAO,CAC9BhB,OAAQ,QACVqB,SAEEkC,gBAACgb,KAAM,CAAAld,SAAA,CACHP,eAAC0d,IAAM,CAAAnd,SACHkC,gBAACkb,IAAO,CAAApd,SAAA,CACJP,eAACkP,KAAU,CACPC,GAAE,IACFjP,MAAO,CAACkP,eAAgB,OAAQhQ,QAAS,QAAQmB,SAEjDP,eAACsJ,IAAM,CAAC1G,IAAKgb,GAAM1e,OAAQ,OAE/Bc,eAACyO,IAAQ,CAACvO,MAAO,CAACf,MAAM,KAAKoB,SACzBP,eAAC8O,IAAY,CACTtQ,QAAQ,oBACRE,UAAWsB,eAAC6J,IAAI,CAACE,KAAK,sBAAsBd,OAAO,SAAS/I,MAAO,CAAEkP,eAAe,QAAQ7O,SAAC,sBAC7FyO,uBAAwB,CAAC9O,MAAM,CAAC8Y,SAAU,GAAI7a,WAAY,+BAC1DqX,yBAA0B,CAACtV,MAAM,CAAC8Y,SAAS,SAG/ChZ,eAAA,OAAKE,MAAO,CAAC2d,SAAU,KAEnB/uB,EAAOC,QACH0T,gBAAC0G,IAAM,CACHlG,KAAK,QACLwG,QAAS,WACLgT,GACJ,EAAElc,SAAA,CACJud,GAAahvB,EAAOG,OAAO,SAAqB,QAAfirB,EAACprB,EAAOC,eAAO,IAAAmrB,OAAA,EAAdA,EAAgBlQ,QAAQ,MAE5DhK,eAACmJ,IAAM,CACH1I,QAAQ,YACRwC,KAAK,QACLwG,QAAS,kBArGhD,WAE2B,OAAAqS,EAAA1T,MAAC,KAADC,UAAA,CAmG2B0V,EAAe,EAACxd,SAAC,iBAIxDP,eAACwI,IAAI,CAACC,WAAS,EAACvI,MAAO,CAACkD,UAAW,GAAIuF,cAAe,IAAIpI,SACtDP,eAACwI,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGtI,SACdkC,gBAACub,KAAM,CAAAzd,SAAA,CACHP,eAACie,KAAK,CACFC,KAAI,IACJC,OAAO,EACPC,QAASpe,eAACkK,GAAgB,MAE9BlK,eAACie,KAAK,CACFC,KAAI,QACJC,OAAO,EACPC,QAASpe,eAACuD,GAAI,MAElBvD,eAACie,KAAK,CACFC,KAAI,WACJC,OAAO,EACPC,QAASpe,eAACkK,GAAgB,MAE9BlK,eAACie,KAAK,CACFC,KAAI,sCACJC,OAAO,EACPC,QAASpe,eAACiQ,GAAmB,MAEjCjQ,eAACie,KAAK,CACFC,KAAI,SACJC,OAAO,EACPC,QAASpe,eAACyZ,GAAK,aAM/BzZ,eAAC8I,IAAK,CAACuV,GAAI,CAACrf,SAAU,QAASoZ,OAAQ,EAAG3D,KAAM,EAAG0D,MAAO,GAAImG,UAAW,EAAE/d,SAEvEkC,gBAAC8b,IAAgB,CACbC,YAAU,EACV5e,MAAOwa,EACPva,SAAU,SAAC4e,EAAOC,GACdrE,EAAUqE,EACd,EAAEne,SAAA,CAEFP,eAAC2e,IAAsB,CAAClf,MAAM,OAAOyZ,KAAMlZ,eAACwP,KAAQ,IAAIL,GAAE,IAAOqF,UAAWtF,OAC5ElP,eAAC2e,IAAsB,CAAClf,MAAM,QAAQyZ,KAAMlZ,eAAC4e,KAAY,IAAIzP,GAAE,SAAYqF,UAAWtF,mBASlH,EAIA,SAAS4O,GAAa/S,GAClB,IAAM9H,EAAO,CAAC9D,MAAO,GAAID,OAAQ,IAC3BgB,EAAQ,CAAC2e,YAAa,IAC5B,OAAQ9T,GACJ,KAAK,EACD,OAAO/K,eAACsJ,IAAM,CAAC1G,IAAI,iDAAiDyb,GAAIpb,EAAM/C,MAAOA,IACzF,KAAK,GACD,OAAOF,eAACsJ,IAAM,CAAC1G,IAAI,iDAAiDyb,GAAIpb,EAAM/C,MAAOA,IACzF,KAAK,IACD,OAAOF,eAACsJ,IAAM,CAAC1G,IAAI,kDAAkDyb,GAAIpb,EAAM/C,MAAOA,IAC1F,KAAK,MACD,OAAOF,eAACsJ,IAAM,CAAC1G,IAAI,kDAAkDyb,GAAIpb,EAAM/C,MAAOA,IAC1F,QACI,MAAO,GAEnB,CElOA4e,IAASC,OACL/e,eAACgf,IAAMC,WAAU,CAAA1e,SACbP,eAACkf,IAAQ,CAAChpB,MAAOA,EAAMqK,SACnBP,eAACia,GAAgB,QAGzBkF,SAASC,eAAe,Q","file":"static/js/main.369a6bb7.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const ceus_fuse = new web3.eth.Contract(unipair_abi, pairs.CEUSFUSEpair);\n    const ceus_lit = new web3.eth.Contract(unipair_abi, pairs.CEUSLITPair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        ceus_fuse.methods.getReserves().call,\n        ceus_lit.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                ceus_fuse_reserves,\n                ceus_lit_reserves,\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //WFUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CEUS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //LIT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',\n                price: {\n                    inFuse: ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1,\n                    inUSD: ceus_lit_reserves.reserve0/ceus_lit_reserves.reserve1 * (ceus_fuse_reserves.reserve0/ceus_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0)\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const dgnx_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.DGNXAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        dgnx_avax.methods.getReserves().call,\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                dgnx_avax_reserves,\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //DGNX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812',\n                price: {\n                    inAVAX: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 || 0,\n                    inUSD: dgnx_avax_reserves.reserve1/dgnx_avax_reserves.reserve0 * avax_price || 0\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.BNBFEGPair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n    const lit_bnb = new web3BSC.eth.Contract(srg_abi, '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n        lit_bnb.methods.calculatePrice().call,\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves,\n                srg_bnb_price,\n                lit_bnb_price,\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n                price: {\n                    inUSD: (srg_bnb_price/(10**9)) * bnb_price,\n                    inETH: (srg_bnb_price/(10**9))\n                }\n            }));\n\n            //LIT\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc',\n                price: {\n                    inUSD: (lit_bnb_price/(10**9)) * (srg_bnb_price/(10**18)) * bnb_price,\n                    inETH: (lit_bnb_price/(10**9))\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_bnb_reserves.reserve0/feg_bnb_reserves.reserve1) * bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //BUSD\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDT\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0x55d398326f99059fF775485246999027B3197955',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.ETHFEGPair);\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: (srg_eth_price/(10**9)) * eth_price,\n                    inETH: (srg_eth_price/(10**9))\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price/(10**18)) * (srg_eth_price/(10**9)) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //FEG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',\n                price: {\n                    inUSD: (feg_eth_reserves.reserve1/feg_eth_reserves.reserve0) * eth_price,\n                    inETH: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            //USDT\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n                price: {\n                    inUSD: 1\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateLPInfo, updateStaked, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport uni_pair_abi from \"../abis/IUniswapV2Pair.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const ceus_contract = new web3.eth.Contract(coineus_abi, \"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n    const fsb_contract = new web3.eth.Contract(coineus_abi, '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31');\n    const lit_contract = new web3.eth.Contract(coineus_abi, '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F');\n\n    const btc_contract = new web3.eth.Contract(coineus_abi, '0x33284f95ccb7B948d9D352e1439561CF83d8d00d');\n    const eth_contract = new web3.eth.Contract(coineus_abi, '0xa722c13135930332Eb3d749B2F0906559D2C5b99');\n    const bnb_contract = new web3.eth.Contract(coineus_abi, '0x6acb34b1Df86E254b544189Ec32Cf737e2482058');\n    const wfuse_contract = new web3.eth.Contract(coineus_abi, '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629');\n\n    const coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\n    const consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\n    const consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\n\n    const ceus_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x87440F829E7ED808599749630555080917c4b3D9\") //CEUS/LIT LP\n    const ceus_fuse_contract = new web3.eth.Contract(uni_pair_abi, \"0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b\") //CEUS/FUSE LP\n    const fuse_lit_contract = new web3.eth.Contract(uni_pair_abi, \"0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\") //LIT/FUSE LP\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        ceus_contract.methods.balanceOf(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call,\n        consensusContract.methods.delegatedAmount(wallet_address, coineusValidatorAddress).call,\n        fsb_contract.methods.balanceOf(wallet_address).call,\n        lit_contract.methods.balanceOf(wallet_address).call,\n\n        btc_contract.methods.balanceOf(wallet_address).call,\n        eth_contract.methods.balanceOf(wallet_address).call,\n        bnb_contract.methods.balanceOf(wallet_address).call,\n        wfuse_contract.methods.balanceOf(wallet_address).call,\n\n        ceus_lit_contract.methods.balanceOf(wallet_address).call,\n        ceus_lit_contract.methods.getReserves().call,\n        ceus_lit_contract.methods.totalSupply().call,\n\n        ceus_fuse_contract.methods.balanceOf(wallet_address).call,\n        ceus_fuse_contract.methods.getReserves().call,\n        ceus_fuse_contract.methods.totalSupply().call,\n\n        fuse_lit_contract.methods.balanceOf(wallet_address).call,\n        fuse_lit_contract.methods.getReserves().call,\n        fuse_lit_contract.methods.totalSupply().call,\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            ceus_balance,\n            fusd_balance,\n            volt_balance,\n            staked_fuse_with_coineus,\n            fsb_balance,\n            lit_balance,\n\n            btc_balance,\n            eth_balance,\n            bnb_balance,\n            wfuse_balance,\n\n            ceus_lit_balance,\n            ceus_lit_reserves,\n            ceus_lit_totalSupply,\n\n            ceus_wfuse_balance,\n            ceus_wfuse_reserves,\n            ceus_wfuse_totalSupply,\n\n            fuse_lit_balance,\n            fuse_lit_reserves,\n            fuse_lit_totalSupply,\n\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateStaked({\n            chain: 'fuse',\n            contract_address: 'native',\n            staked: staked_fuse_with_coineus / (10 ** 18)\n        }))\n\n        //ceus\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8',\n            balance: ceus_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xd0ce1b4A349C35e61Af02f5971e71ac502441E49',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//volt\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x28344D35203CF225E84f5B75E0d64bA3f2d9cc31',//fsb\n            balance: fsb_balance / (10 ** 9)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F',//lit\n            balance: lit_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x33284f95ccb7B948d9D352e1439561CF83d8d00d',//btc\n            balance: btc_balance / (10 ** 8)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',//eth\n            balance: eth_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x6acb34b1Df86E254b544189Ec32Cf737e2482058',//bnb\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',//wfuse\n            balance: wfuse_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x87440F829E7ED808599749630555080917c4b3D9',//ceus/lit lp\n            balance: ceus_lit_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x87440F829E7ED808599749630555080917c4b3D9',//ceus/lit lp\n            lp: {\n                token0: ceus_lit_reserves.reserve0 / (10**18) * ceus_lit_balance/ceus_lit_totalSupply,\n                token1: ceus_lit_reserves.reserve1 / (10**18) * ceus_lit_balance/ceus_lit_totalSupply,\n                share: ceus_lit_balance/ceus_lit_totalSupply * 100\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',//ceus/wfuse lp\n            balance: ceus_wfuse_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',//ceus/wfuse lp\n            lp: {\n                token0: ceus_wfuse_reserves.reserve0 / (10**18) * ceus_wfuse_balance/ceus_wfuse_totalSupply,\n                token1: ceus_wfuse_reserves.reserve1 / (10**18) * ceus_wfuse_balance/ceus_wfuse_totalSupply,\n                share: ceus_wfuse_balance/ceus_wfuse_totalSupply * 100\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x1a77baea67c346ce17486b078a3c3f53a99a9fcc',//fuse/lit lp\n            balance: fuse_lit_balance / (10**18)\n        }));\n\n        store.dispatch(updateLPInfo({\n            chain: 'fuse',\n            contract_address: '0x1a77baea67c346ce17486b078a3c3f53a99a9fcc',//fuse/lit lp\n            lp: {\n                token0: fuse_lit_reserves.reserve0 / (10**18) * fuse_lit_balance/fuse_lit_totalSupply,\n                token1: fuse_lit_reserves.reserve1 / (10**18) * fuse_lit_balance/fuse_lit_totalSupply,\n                share: fuse_lit_balance/fuse_lit_totalSupply * 100\n            }\n        }));\n\n        //0x1a77baea67c346ce17486b078a3c3f53a99a9fcc\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const dgnx_contract = new web3AVAX.eth.Contract(coineus_abi, '0x51e48670098173025C477D9AA3f0efF7BF9f7812');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        dgnx_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            usdc_balance,\n            dgnx_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x51e48670098173025C477D9AA3f0efF7BF9f7812', //dgnx\n            balance: dgnx_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n    const srg_contract = new web3BSC.eth.Contract(coineus_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n    const busd_contract = new web3BSC.eth.Contract(coineus_abi, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56');\n    const usdc_contract = new web3BSC.eth.Contract(coineus_abi, '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d');\n    const usdt_contract = new web3BSC.eth.Contract(coineus_abi, '0x55d398326f99059fF775485246999027B3197955');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n        busd_contract.methods.balanceOf(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        usdt_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            feg_balance,\n            srg_balance,\n            busd_balance,\n            usdc_balance,\n            usdt_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',//busd\n            balance: busd_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',//usdc\n            balance: usdc_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x55d398326f99059fF775485246999027B3197955',//usdt\n            balance: usdt_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n    const feg_contract = new web3ETH.eth.Contract(coineus_abi, '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11');\n    const usdc_contract = new web3ETH.eth.Contract(coineus_abi, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48');\n    const usdt_contract = new web3ETH.eth.Contract(coineus_abi, '0xdAC17F958D2ee523a2206206994597C13D831ec7');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n        feg_contract.methods.balanceOf(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        usdt_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            srg_balance,\n            feg_balance,\n            usdc_balance,\n            usdt_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xbededDf2eF49E87037c4fb2cA34d1FF3D3992A11',//feg\n            balance: feg_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',//usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',//usdt\n            balance: usdt_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {createTheme} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#DADADA'\n        },\n        secondary: {\n            main: '#a9a9a9'\n        }\n    }\n});\n\nconst useNetworkChip = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport {useNetworkChip};\n\nexport default theme;","import {FormControl, TextField} from \"@mui/material\";\n\nexport default function SwapInput(props) {\n\n    const {label, max, disabled, value, onChange, startAdornment, endAdornment} = props;\n\n    return (\n        <FormControl\n            style={{\n                backgroundColor: 'rgb(0,0,0)', // same as background default\n                border: 'none',\n                borderColor: 'unset',\n                borderRadius: 4\n            }}\n            fullWidth>\n            <TextField\n                variant=\"outlined\"\n                type=\"text\"\n                inputMode=\"decimal\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"off\"\n                pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                placeholder=\"0\"\n                max={max}\n                disabled={disabled}\n                value={value}\n                onChange={onChange}\n                label={label}\n                InputProps={{\n                    inputProps: {\n                        style: {\n                            textAlign: 'right',\n                        }\n                    },\n                    startAdornment: startAdornment,\n                    endAdornment: endAdornment\n                }}\n            />\n        </FormControl>\n    )\n}\n","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","export default __webpack_public_path__ + \"static/media/logo192.e5433bbf.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#1E3140', color: \"#dadada\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress color=\"secondary\" size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","import {Avatar, Button, Container, Divider, Grid, InputAdornment, Link, Paper, Typography} from \"@mui/material\";\nimport SwapInput from \"../components/SwapInput\";\nimport {useEffect, useState} from \"react\";\nimport {useTheme} from \"@mui/styles\";\nimport {useSelector} from \"react-redux\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport Web3 from \"web3\";\nimport uni_abi from \"../abis/IUniswapV2Pair.json\";\nimport router_abi from \"../abis/IPancakeRouter.json\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport getUserBalances from \"../utils/get_balances\";\n\nconst pairAddress = '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b';\nconst routerAddress = '0xE3F85aAd0c8DD7337427B9dF5d0fB741d65EEEB5';\n\nexport default function Swap() {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const theme = useTheme();\n\n    const [amountIn, setAmountIn] = useState(0);\n    const [amountOut, setAmountOut] = useState(0);\n    const [pending, setPending] = useState(false);\n\n    const [reserves, setReserves] = useState([0, 0]);\n\n    const [amtRecieved, setAmtRecieved] = useState(undefined);\n    const [txHash, setTxHash] = useState(undefined);\n    const [txCost, setTxCost] = useState(undefined);\n\n    const getCeusAmt = () => {\n\n        if (!amountIn || !reserves[0] || !reserves[1]) {\n            setAmountOut(0)\n            return;\n        }\n\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n\n        contract.methods.getAmountOut(web3.utils.toWei(amountIn), reserves[0], reserves[1]).call((err, resp) => {\n            setAmountOut(CoineusCryptoFormat(resp / (10 ** 18) * .995));\n        })\n    }\n\n    useEffect(getCeusAmt, [amountIn, reserves, rpc.fuse]);\n\n    const getReserves = () => {\n        const web3 = new Web3(rpc.fuse);\n        const contract = new web3.eth.Contract(uni_abi, pairAddress);\n\n        contract.methods.getReserves().call((err, resp) => {\n            setReserves([resp.reserve0, resp.reserve1]);\n        })\n    }\n\n    useEffect(() => {\n        getReserves();\n        const interval = setInterval(getReserves, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const swap = async () => {\n        setAmtRecieved(undefined);\n        setTxHash(undefined);\n        setTxCost(undefined);\n\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(router_abi, routerAddress);\n        const gasPrice = await web3.eth.getGasPrice();\n\n        contract.methods.swapExactETHForTokens(\n            web3.utils.toWei((amountOut).toString()),\n            [\n                '0x0be9e53fd7edac9f859882afdda116645287c629',\n                '0x4e69ae0cd024754655b4ef74f24a8dcb39ba07e8'\n            ],\n            wallet.address,\n            (((new Date()).getTime() + 60000) / 1000).toFixed(0)\n        )\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(amountIn),\n                    gas: 300000,\n                    gasPrice\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n                setTxHash(tx);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getUserBalances(wallet.address);\n                setAmtRecieved(web3.utils.hexToNumberString(receipt.events[2].raw.data) / (10 ** 18));\n                setTxCost(receipt.gasUsed * (receipt.effectiveGasPrice / (10 ** 18)));\n                setPending(false);\n            });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    value={amountIn || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountIn(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar src='https://coineus.app/assets/tokens/fuse/logo.png'\n                                                                   style={{width: 24, height: 24}}/>}\n                                            >FUSE\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse.native)}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <SwapInput\n                                    disabled\n                                    value={amountOut || \"\"}\n                                    onChange={(ev) => {\n                                        setAmountOut(ev.target.value)\n                                    }}\n                                    startAdornment={\n                                        <InputAdornment position=\"start\">\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                style={{\n                                                    backgroundColor: theme.palette.background.paper,\n                                                    backgroundImage: 'linear-gradient(rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05))',\n                                                    color: \"#fff\"\n                                                }}\n                                                startIcon={<Avatar\n                                                    src='https://coineus.app/assets/tokens/fuse/0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8/logo.png'\n                                                    style={{width: 24, height: 24}}/>}\n                                            >CEUS\n                                            </Button>\n                                        </InputAdornment>\n                                    }\n                                />\n                                <Typography variant=\"caption\"\n                                            style={{float: 'right'}}>Balance: {CoineusCryptoFormat(wallet.balances.fuse[\"0x4e69Ae0CD024754655b4eF74F24A8DCB39Ba07e8\"])}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button fullWidth variant=\"contained\" onClick={swap}>SWAP</Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    {\n                        amtRecieved !== undefined && <>\n                            <Divider style={{marginTop: 40, marginBottom: 10}}>RECEIPT</Divider>\n                            <Paper\n                                style={{\n                                    backgroundColor: 'white',\n                                    color: \"#000\",\n                                    padding: 20,\n                                    fontFamily: 'monospace'\n                                }}>\n                                <Grid container>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>Purchased</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(amtRecieved)} CEUS`}\n                                        </Typography>\n                                    </Grid>\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxFee</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusCryptoFormat(txCost)} FUSE`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={6}/>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n                                            {`${CoineusUSDFormat(txCost * wallet.prices.fuse?.native?.inUSD)} USD`}\n                                        </Typography>\n                                    </Grid>\n\n\n                                    <Grid item xs={12} style={{marginTop: 20}} />\n\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace'}}>TxHash</Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Typography style={{fontFamily: 'monospace', textAlign: 'right'}}>\n\n                                            <Link\n                                                style={{color: \"#000\", textDecorationColor: '#000'}}\n                                                href={`https://explorer.fuse.io/tx/${txHash}`}\n                                                target=\"_blank\">{`0x..${txHash.substr(-12)}`}</Link>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n\n                            </Paper>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    )\n}","import {Paper} from \"@mui/material\";\n\nexport default function Panel(props) {\n    return (<Paper style={{\n        color: 'white',\n        padding: 10,\n        margin: 0,\n        borderRadius: 4,\n        backgroundColor: \"#000\",\n        border: \"2px solid #222\"\n    }}>{props.children}</Paper>)\n}","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nimport {\n    Avatar,\n    Button,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper, Skeleton, Tab, Tabs,\n    ToggleButton,\n    ToggleButtonGroup\n} from \"@mui/material\";\n\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../../utils/currency_format\";\n\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport CurrencyBitcoinIcon from '@mui/icons-material/CurrencyBitcoin';\nimport BoltIcon from '@mui/icons-material/Bolt';\n\nimport IERC20 from \"../../abis/IERC20.json\";\nimport NATIVE_NATIVE_ABI from \"../../abis/LightningRaffles/NativeNative.json\";\nimport NATIVE_TOKEN_JACKPOT_ABI from \"../../abis/LightningRaffles/NativeTokenJackpot.json\";\nimport TOKEN_TOKEN_ABI from \"../../abis/LightningRaffles/TokenToken.json\";\nimport TOKEN_TOKEN_JACKPOT_ABI from \"../../abis/LightningRaffles/TokenTokenJackpot.json\";\nimport Panel from \"../../components/Panel\";\n\nimport {useNetworkChip} from \"../../theme\";\nimport clsx from \"clsx\";\n\nexport default function LightningRaffles() {\n\n    const [displayUSD, setDisplayUSD] = useState(false);\n    const [chainTab, setChainTab] = useState('fuse');\n\n    return (\n        <Grid container spacing={2} style={{paddingBottom: 60}}>\n            <Grid item xs={12} style={{textAlign: 'right'}}>\n                <ToggleButtonGroup\n                    value={displayUSD}\n                    exclusive\n                    onChange={() => setDisplayUSD(!displayUSD)}\n                    style={{backgroundColor: '#000'}}\n                >\n                    <ToggleButton value={false}>\n                        <CurrencyBitcoinIcon/>\n                    </ToggleButton>\n                    <ToggleButton value={true}>\n                        <AttachMoneyIcon/>\n                    </ToggleButton>\n                </ToggleButtonGroup>\n            </Grid>\n\n            <Grid item xs={12} style={{textAlign: 'right'}}>\n                <Tabs\n                    variant=\"fullWidth\"\n                    value={chainTab}\n                    onChange={(ev, val) => {\n                        setChainTab(val)\n                    }}\n                >\n                    <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                    <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                </Tabs>\n            </Grid>\n            {\n                chainTab === 'fuse' && <>\n\n                    <RaffleGameInfo\n                        contract_address='0x6AC221FB606237f3941F04Dc7053c4e8e93C9c4E'\n                        abi={NATIVE_NATIVE_ABI}\n                        displayUSD={displayUSD}\n                        network=\"fuse\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0xAC7d761036F5E6c54a5507880b8C97F0125cff6B'\n                        abi={NATIVE_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"fuse\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0xE52aE739b312067CA85487aF5536808dB243d1d1'\n                        abi={NATIVE_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"fuse\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0x774A28f03999761F0d902764C711F48073622fAf'\n                        abi={TOKEN_TOKEN_ABI}\n                        displayUSD={displayUSD}\n                        network=\"fuse\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0x134498f0629B4e0e904BA4CC5Ec69f919BE69A5B'\n                        abi={TOKEN_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"fuse\"\n                    />\n                </>\n            }\n\n\n            {\n                chainTab === 'bnb' && <>\n\n                    <RaffleGameInfo\n                        contract_address='0xcF8780C6E5D698339aCd43df142CFD4BeEdEd1cE'\n                        abi={TOKEN_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"bnb\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0xA45e2bD9D4c3E831a262A2b5Dca574DdE92b5cAb'\n                        abi={TOKEN_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"bnb\"\n                    />\n\n                    <RaffleGameInfo\n                        contract_address='0xbC2Bae85083E9CA853919D468ede541d165653F1'\n                        abi={TOKEN_TOKEN_JACKPOT_ABI}\n                        displayUSD={displayUSD}\n                        network=\"bnb\"\n                    />\n                </>\n            }\n\n\n        </Grid>\n    );\n}\n\nfunction RaffleGameInfo(props) {\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const {contract_address, abi, network, displayUSD} = props;\n\n    const [raffle, setRaffle] = useState({nextDraw: 0});\n\n    const classes = useNetworkChip();\n\n    const getRaffleGameInfo = () => {\n\n        const web3 = new Web3(rpc[network]);\n\n        const raffle_contract = new web3.eth.Contract(abi, contract_address);\n\n        const calls = [\n            raffle_contract.methods.getRaffleInfo().call,\n            raffle_contract.methods.getTokens().call,\n            raffle_contract.methods.getPlayers().call,\n            web3.eth.getBalance(contract_address)\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                raffleInfo,\n                tokens,\n                players,\n                bal\n            ] = resp;\n\n            let jp;\n            let token_contract = new web3.eth.Contract(IERC20, tokens.jackpot.id);\n\n            //raffleType enum\n            //{NATIVE_NATIVE, NATIVE_TOKEN_JACKPOT, TOKEN_TOKEN, TOKEN_TOKEN_JACKPOT}\n            // eslint-disable-next-line default-case\n            switch (parseInt(raffleInfo.raffle_type)) {\n                case 0:\n                    //use native bal\n                    jp = bal - (bal / raffleInfo.admin_fee);\n                    break;\n                case 1:\n                case 3:\n                    //use cap\n                    jp = raffleInfo.cap;\n                    break;\n                case 2:\n                    jp = undefined;\n                    break;\n            }\n\n            /**\n             * need to call this just in the case of TOKEN_TOKEN_JACKPOT\n             * have to check if jackpot token is 0x00, cause if native token will error trying to call contract.method\n             */\n            makeBatchRequest(web3, [tokens.jackpot.id === \"0x0000000000000000000000000000000000000000\" ? web3.eth.getBalance(contract_address) : token_contract.methods.balanceOf(contract_address).call]).then(resp => {\n\n                /**\n                 * if jp (jackpot) wasn't set before, it means that the resp is needed\n                 */\n                if (jp === undefined) jp = (resp - (resp / raffleInfo.admin_fee));\n\n                setRaffle({\n                    ticketCost: raffleInfo.ticket_cost / (10 ** tokens.entry.decimals),\n                    adminFee: raffleInfo.admin_fee / 1,\n                    raffleID: raffleInfo.raffle_id / 1,\n                    entriesAllowed: raffleInfo.entries_allowed / 1,\n                    nextDraw: raffleInfo.next_draw * 1000,\n                    nextDrawInterval: raffleInfo.next_draw_interval_hours / 1,\n                    totalFees: raffleInfo.total_fees / 1,\n                    totalWinnings: raffleInfo.total_winnings / 1,\n                    raffleType: raffleInfo.raffle_type / 1,\n                    raffleState: raffleInfo.raffle_state / 1,\n                    tokens: {entry: tokens.entry, jackpot: tokens.jackpot},\n                    jackpot: jp / (10 ** tokens.jackpot.decimals),\n                    players\n                });\n            })\n        })\n    }\n\n    useEffect(() => {\n        getRaffleGameInfo();\n        const interval = setInterval(getRaffleGameInfo, 10000)\n        return () => clearInterval(interval);\n    }, []);\n\n    const [drawingTime, setDrawingTime] = useState(undefined);\n    useEffect(() => {\n        setDrawingTime(msToHMS(timeToNextDraw(raffle.nextDraw)));\n        const interval1 = setInterval(() => {\n            setDrawingTime(msToHMS(timeToNextDraw(raffle.nextDraw)));\n        }, 1000);\n        return () => clearInterval(interval1);\n    }, [raffle]);\n\n    if (Object.entries(raffle).length === 1) {\n        return <RaffleDetailsLoading/>;\n    }\n\n    return <Grid item xs={12} style={{margin: 10}}>\n        <Panel>\n            <List disablePadding>\n                <ListItem disableGutters>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6} style={{textAlign: 'center'}}>\n                            <Paper style={{padding: 20}}>\n                                <ListItemAvatar>\n                                    <Avatar style={{margin: '0 auto'}}\n                                            src={`https://coineus.app/assets/tokens/${network}/${raffle.tokens.entry.id === \"0x0000000000000000000000000000000000000000\" ? '' : raffle.tokens.entry.id + '/'}logo.png`}/>\n                                    {raffle.tokens.entry.id !== \"0x0000000000000000000000000000000000000000\" &&\n                                        <span className={clsx(classes.networkChip, network)}\n                                              style={{marginLeft: 10, top: 52}}/>}\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={displayUSD ? `~${CoineusUSDFormat(raffle.ticketCost * (wallet.prices[network][raffle.tokens.entry.id === \"0x0000000000000000000000000000000000000000\" ? \"native\" : raffle.tokens.entry.id]?.inUSD || 0))}` : `${CoineusCryptoFormat(raffle.ticketCost)} ${raffle.tokens.entry.symbol}`}\n                                    primaryTypographyProps={{\n                                        style: {fontWeight: 700},\n                                        variant: 'h6'\n                                    }}\n                                    secondary={`Ticket Price`}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6} style={{textAlign: 'center'}}>\n                            <Paper style={{padding: 20}}>\n                                <ListItemAvatar>\n                                    <Avatar style={{margin: '0 auto'}}\n                                            src={`https://coineus.app/assets/tokens/${network}/${raffle.tokens.jackpot.id === \"0x0000000000000000000000000000000000000000\" ? '' : raffle.tokens.jackpot.id + '/'}logo.png`}/>\n                                    {raffle.tokens.entry.id !== \"0x0000000000000000000000000000000000000000\" &&\n                                        <span className={clsx(classes.networkChip, network)}\n                                              style={{marginLeft: 10, top: 52}}/>}\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={displayUSD ? `~${CoineusUSDFormat(raffle.jackpot * (wallet.prices[network][raffle.tokens.jackpot.id === \"0x0000000000000000000000000000000000000000\" ? \"native\" : raffle.tokens.jackpot.id]?.inUSD || 0))}` : `${CoineusCryptoFormat(raffle.jackpot)} ${raffle.tokens.jackpot.symbol}`}\n                                    primaryTypographyProps={{\n                                        style: {fontWeight: 700},\n                                        variant: 'h6'\n                                    }}\n                                    secondary={`${raffle.raffleType === 1 || raffle.raffleType === 3 ? '' : 'Current'} Jackpot`}\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                </ListItem>\n\n                <ListItem disableGutters>\n\n                    <RouterLink to={`/raffles/${network}/${contract_address}`}\n                                style={{width: '100%', textDecoration: 'none'}}>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            disabled={raffle.raffleState === 1 && wallet.address !== '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe'}\n                            endIcon={getOccurrence(raffle.players, wallet.address) ? <BoltIcon/> : undefined}\n                        >{raffle.raffleState === 1 ? \"RAFFLE CLOSED\" : (timeToNextDraw(raffle.nextDraw) > 0) ? `Drawing in ${drawingTime}` : `Waiting for Winner`}\n                        </Button>\n\n                    </RouterLink>\n                </ListItem>\n            </List>\n        </Panel>\n    </Grid>\n}\n\nfunction RaffleDetailsLoading() {\n    return (\n        <Grid item xs={12} style={{margin: 10}}>\n            <Panel style={{padding: 15}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Skeleton variant=\"rounded\" height={160} width=\"100%\"/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Skeleton variant=\"rounded\" height={160} width=\"100%\"/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rounded\" height={36} width=\"100%\"/>\n                    </Grid>\n                </Grid>\n            </Panel>\n        </Grid>);\n}\n\nfunction timeToNextDraw(d) {\n    return d - new Date();\n}\n\nfunction msToHMS(ms) {\n    let h = ms / 3.6e6 | 0;\n    let m = (ms % 3.6e6) / 6e4 | 0;\n    let s = (ms % 6e4) / 1e3 | 0;\n    return `${h}:${('' + m).padStart(2, '0')}:${('' + s).padStart(2, '0')}`;\n}\n\nfunction getOccurrence(array, value) {\n    return array.filter((v) => (v === value)).length;\n}\n","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport {\n    Button,\n    Container,\n    Fab,\n    Grid,\n    List,\n    ListItem,\n    ListItemText, Slider, TextField,\n    Typography\n} from \"@mui/material\";\nimport {makeBatchRequest} from \"../../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../../utils/currency_format\";\nimport CoineusLoading from \"../../components/CoineusLoading\";\nimport {useParams, Link as RouterLink} from \"react-router-dom\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n\nimport IERC20 from \"../../abis/IERC20.json\";\nimport NATIVE_NATIVE_ABI from \"../../abis/LightningRaffles/NativeNative.json\";\n\n\nimport {toWei} from \"../../utils/format\";\nimport Panel from \"../../components/Panel\";\n\nexport default function LightningRaffleGame() {\n\n    let {contract_address, network} = useParams();\n\n    const {wallet, rpc} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n\n    const [raffle, setRaffle] = useState({});\n\n    const [allowance, setAllowance] = useState(0);\n    const [entrySupply, setEntrySupply] = useState(0);\n\n    const [numTickets, setNumTickets] = useState(1);\n\n\n    const [_adminFee, _setAdminFee] = useState(undefined);\n    const [_jackpotCap, _setJackpotCap] = useState(undefined);\n    const [_maxEntries, _setMaxEntries] = useState(undefined);\n    const [_nextDrawIntervalHours, _setNextDrawIntervalHours] = useState(undefined);\n    const [_sendFeeTo, _setSendFeeTo] = useState(undefined);\n    const [_ticketCostEther, _setTicketCostEther] = useState(undefined);\n    const [_ticketCostWei, _setTicketCostWei] = useState(undefined);\n    const [_fundRounds, _setFundRounds] = useState(0);\n\n    const getRaffleInfo = (contract_address, callback) => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(rpc[network]);\n\n        const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n        const calls = [\n            raffle_contract.methods.getRaffleInfo().call,\n            raffle_contract.methods.getPlayers().call,\n            raffle_contract.methods.getStatsByAddress(wallet.address).call,\n            raffle_contract.methods.getTokens().call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                raffleInfo,\n                players,\n                playerStats,\n                tokens\n            ] = resp;\n\n            const jackpot_contract = new web3.eth.Contract(IERC20, tokens.jackpot.id);\n            const entry_contract = new web3.eth.Contract(IERC20, tokens.entry.id);\n\n            const calls2 = [\n                tokens.jackpot.id === \"0x0000000000000000000000000000000000000000\" ? web3.eth.getBalance(contract_address) : jackpot_contract.methods.balanceOf(contract_address).call,\n                raffle_contract.methods.getGameHistoryByRaffleID(raffleInfo.raffle_id - 1 > 0 ? raffleInfo.raffle_id - 1 : 0).call,\n                tokens.entry.id === \"0x0000000000000000000000000000000000000000\" ? (new Promise((resolve) => {\n                    resolve()\n                })) : entry_contract.methods.allowance(wallet.address, contract_address).call,\n                tokens.entry.id === \"0x0000000000000000000000000000000000000000\" ? (new Promise((resolve) => {\n                    resolve()\n                })) : entry_contract.methods.totalSupply().call\n            ];\n\n            makeBatchRequest(web3, calls2).then(resp => {\n                let [\n                    jackpot,\n                    history,\n                    _allowance,\n                    entrySupply\n                ] = resp;\n\n                let roundsRemaining = undefined, jackpotTokenBalance;\n                if (raffleInfo.raffle_type === 1 || raffleInfo.raffle_type === 3) {\n                    jackpotTokenBalance = jackpot;\n                    roundsRemaining = jackpot / raffleInfo.cap;\n                    jackpot = raffleInfo.cap;\n                } else {\n                    jackpot = (jackpot - (jackpot / raffleInfo.admin_fee))\n                }\n\n                setAllowance(_allowance / 10 ** tokens.entry.decimals);\n                setEntrySupply(entrySupply);\n\n                if (_adminFee === undefined) _setAdminFee(raffleInfo.admin_fee);\n                if (_jackpotCap === undefined) _setJackpotCap(jackpot);\n                if (_maxEntries === undefined) _setMaxEntries(raffleInfo.entries_allowed);\n                if (_nextDrawIntervalHours === undefined) _setNextDrawIntervalHours(raffleInfo.next_draw_interval_hours);\n                if (_sendFeeTo === undefined) _setSendFeeTo(raffleInfo.send_fee_to);\n                if (_ticketCostEther === undefined) _setTicketCostEther(raffleInfo.ticket_cost / (10 ** tokens.entry.decimals));\n                if (_ticketCostWei === undefined) _setTicketCostWei(raffleInfo.ticket_cost);\n\n                callback({\n                    ticketCost: raffleInfo.ticket_cost / (10 ** tokens.entry.decimals),\n                    adminFee: raffleInfo.admin_fee,\n                    raffleID: raffleInfo.raffle_id,\n                    entriesAllowed: raffleInfo.entries_allowed / 1,\n                    nextDraw: raffleInfo.next_draw * 1000,\n                    nextDrawInterval: raffleInfo.next_draw_interval_hours,\n                    totalFees: raffleInfo.total_fees,\n                    totalWinnings: raffleInfo.total_winnings / (10 ** tokens.jackpot.decimals),\n                    raffleType: raffleInfo.raffle_type / 1,\n                    raffleState: raffleInfo.raffle_state / 1,\n                    jackpot: jackpot / (10 ** tokens.jackpot.decimals),\n                    players,\n                    previousWinner: history.winner,\n                    previousJackpot: history.jackpot,\n                    playerStats,\n                    tokens,\n                    roundsRemaining,\n                    jackpotTokenBalance: jackpotTokenBalance / (10 ** tokens.jackpot.decimals)\n                });\n            });\n        })\n            .catch(console.log)\n    }\n\n    useEffect(() => {\n        getRaffleInfo(contract_address, setRaffle);\n        const interval = setInterval(() => getRaffleInfo(contract_address, setRaffle), 30000)\n        return () => clearInterval(interval);\n    }, [rpc[network], wallet.address]);\n\n    const [drawingTime, setDrawingTime] = useState(0);\n    useEffect(() => {\n        setDrawingTime(msToHMS(timeToNextDraw(raffle.nextDraw)));\n        const interval = setInterval(() => {\n            setDrawingTime(msToHMS(timeToNextDraw(raffle.nextDraw)));\n        }, 1000);\n        return () => clearInterval(interval);\n    })\n\n    const pickWinner = () => {\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n        contract.methods.pickWinner(\"coineus\" + (new Date()).getTime())\n            .send(\n                {\n                    from: wallet.address\n                }\n            )\n            .then(function (receipt) {\n                getRaffleInfo()\n            })\n            .catch(e => console.log);\n\n    }\n\n    const checkAllowance = (entry_contract, amount) => {\n        return new Promise((resolve, reject) => {\n            entry_contract\n                .methods\n                .allowance(wallet.address, contract_address)\n                .call((err, resp) => {\n                    if ((resp / (10 ** raffle.tokens.entry.decimals)) >= amount) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                })\n        });\n    }\n\n    const increaseAllowance = (entry_contract, amount) => {\n        return new Promise((resolve, reject) => {\n            entry_contract\n                .methods\n                .approve(contract_address, entrySupply.toString())\n                .send({from: wallet.address, gasPrice: 10000000000})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    setPending(false)\n                    resolve();\n                });\n        });\n    }\n\n    const enter = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const entry_contract = new web3.eth.Contract(IERC20, raffle.tokens.entry.id);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            const enterRaffle = () => {\n                raffle_contract.methods.enter()\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getRaffleInfo(contract_address, setRaffle)\n                        setPending(false);\n                    });\n            }\n\n            checkAllowance(entry_contract, raffle.ticketCost)\n                .then(enterRaffle)\n                .catch(() => {\n                    increaseAllowance(entry_contract).then(enterRaffle)\n                })\n\n        }\n    }\n\n    const enterMulti = (entries) => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const entry_contract = new web3.eth.Contract(IERC20, raffle.tokens.entry.id);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            entries = entries || 1;\n\n            const enterRaffle = () => {\n                raffle_contract.methods.multiEnter(entries)\n                    .send({from: wallet.address, gasPrice: 10000000000})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getRaffleInfo(contract_address, setRaffle)\n                        setPending(false);\n                    });\n            }\n\n            checkAllowance(entry_contract, raffle.ticketCost * entries)\n                .then(enterRaffle)\n                .catch(() => {\n                    console.log('call increaseAllowance')\n                    increaseAllowance(entry_contract).then(enterRaffle)\n                })\n\n        }\n    }\n\n    const enterNative = () => {\n        setPending(true)\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n        contract.methods.enter()\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei(raffle.ticketCost.toString()),\n                    gas: 300000,\n                    gasPrice: 10000000000\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getRaffleInfo(contract_address, setRaffle)\n                setPending(false);\n            });\n    }\n\n    const enterNativeMulti = (entries) => {\n        setPending(true)\n        const web3 = new Web3(window.provider);\n        const contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n        contract.methods.multiEnter(entries)\n            .send(\n                {\n                    from: wallet.address,\n                    value: web3.utils.toWei((raffle.ticketCost * entries).toString()),\n                    gas: 300000,\n                    gasPrice: 10000000000\n                }\n            )\n            .once('transactionHash', function (tx) {\n                setPending(true);\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                getRaffleInfo(contract_address, setRaffle)\n                setPending(false);\n            });\n    }\n\n    const checkChain = () => {\n        switch (network) {\n            case \"avax\":\n                if (wallet.chain === 43114) return true;\n                break;\n            case \"bnb\":\n                if (wallet.chain === 56) return true;\n                break;\n            case \"fuse\":\n                if (wallet.chain === 122) return true;\n                break;\n            default:\n                return false;\n        }\n    }\n\n    const changeNetwork = async () => {\n        let chainID = 122;\n        switch (network) {\n            case \"avax\":\n                chainID = 43114;\n                break;\n            case \"bnb\":\n                chainID = 56;\n                break;\n            case \"fuse\":\n                chainID = 122;\n                break;\n            default:\n                return false;\n        }\n\n        const web3 = new Web3(window.provider);\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{chainId: web3.utils.toHex(chainID)}], // chainId must be in hexadecimal numbers\n        });\n    }\n\n    const getButtonLabel = (entries = 1) => {\n        if (raffle.raffleState === 1)\n            return \"RAFFLE CLOSED\";\n\n        if (getOccurrence(raffle.players, wallet.address) >= raffle.entriesAllowed)\n            return \"MAX ENTRIES\";\n\n        if (timeToNextDraw(raffle.nextDraw) < 0)\n            return \"WAITING TO PICK WINNER\";\n\n        let approve = \"\";\n\n        if (raffle.tokens.entry.id !== \"0x0000000000000000000000000000000000000000\") {\n            if (allowance < raffle.ticketCost) {\n                approve = \"APPROVE + \";\n            }\n\n            if (entries > 1 && allowance < raffle.ticketCost * entries) {\n                approve = \"APPROVE + \";\n            }\n        }\n\n        if (entries > 1) {\n            return `${approve}BUY ${entries} TICKETS (${raffle.ticketCost * entries} ${raffle.tokens.entry.symbol})`;\n        }\n\n        return `${approve}BUY ${entries} TICKET (${raffle.ticketCost} ${raffle.tokens.entry.symbol})`;\n    }\n\n    const getButtonDisabled = () => {\n        if (raffle.raffleState === 1)\n            return true;\n\n        if (getOccurrence(raffle.players, wallet.address) >= raffle.entriesAllowed)\n            return true;\n\n        return timeToNextDraw(raffle.nextDraw) < 0;\n    }\n\n    if (Object.entries(raffle).length < 1) {\n        return <CoineusLoading open={true} label=\"Loading...\"/>;\n    }\n\n\n    // ADMIN FUNCTIONS\n    const startRaffle = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.startRaffle()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const openRaffle = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.openRaffle()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const closeRaffle = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.closeRaffle()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const resetNextDraw = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.resetNextDraw()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setAdminFee = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setAdminFee(_adminFee)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setJackpotCap = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setJackpotCap(_jackpotCap)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setMaxEntries = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setMaxEntries(_maxEntries)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setNextDrawIntervalHours = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setNextDrawIntervalHours(_nextDrawIntervalHours)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setSendFeeTo = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setSendFeeTo(_sendFeeTo)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setTicketCostEther = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setTicketCostEther(_ticketCostEther)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const setTicketCostWei = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const raffle_contract = new web3.eth.Contract(NATIVE_NATIVE_ABI, contract_address);\n\n            raffle_contract.methods.setTicketCostWei(_ticketCostWei)\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n    const fundRounds = () => {\n        if (wallet.address) {\n            setPending(true)\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(IERC20, raffle.tokens.jackpot.id);\n\n            contract.methods.transfer(contract_address, toWei(_fundRounds * raffle.jackpot))\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getRaffleInfo(contract_address, setRaffle)\n                    setPending(false);\n                });\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={4} style={{paddingBottom: 80}}>\n                <Grid item xs={12}>\n                    <Fab to={\"/raffles\"} component={RouterLink} size=\"small\"\n                         style={{position: 'fixed', top: 8, left: 15, zIndex: 99999}}><ArrowBackIcon/></Fab>\n                </Grid>\n\n                {\n                    wallet.address === '0xb80267eA7fa368374ee4d4Bf10044778232AdEFe' && <Grid item xs={12}>\n                        <Panel>\n                            <Grid container spacing={2}>\n                                <Grid item xs={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={raffle.raffleState === 1 || !checkChain()}\n                                        onClick={startRaffle}>Start Raffle</Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={raffle.raffleState === 0 || !checkChain()}\n                                        onClick={openRaffle}>Open Raffle</Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={raffle.raffleState === 1 || !checkChain()}\n                                        onClick={closeRaffle}>Close Raffle</Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Button\n                                        variant=\"contained\"\n                                        fullWidth\n                                        disabled={raffle.raffleState === 1 || !checkChain()}\n                                        onClick={resetNextDraw}>Reset Draw</Button>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Admin Fee\"\n                                        value={_adminFee}\n                                        onChange={ev => _setAdminFee(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setAdminFee}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Jackpot Cap\"\n                                        value={_jackpotCap}\n                                        onChange={ev => _setJackpotCap(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setJackpotCap}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Max Entries\"\n                                        value={_maxEntries}\n                                        onChange={ev => _setMaxEntries(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setMaxEntries}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Next Drawing Interval Hours\"\n                                        value={_nextDrawIntervalHours}\n                                        onChange={ev => _setNextDrawIntervalHours(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setNextDrawIntervalHours}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Send Fee To\"\n                                        value={_sendFeeTo}\n                                        onChange={ev => _setSendFeeTo(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setSendFeeTo}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Set Ticket Cost Ether\"\n                                        value={_ticketCostEther}\n                                        onChange={ev => _setTicketCostEther(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setTicketCostEther}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Set Ticket Cost Wei\"\n                                        value={_ticketCostWei}\n                                        onChange={ev => _setTicketCostWei(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={setTicketCostWei}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        label=\"Fund Rounds\"\n                                        value={_fundRounds}\n                                        onChange={ev => _setFundRounds(ev.target.value)}\n                                        InputProps={{\n                                            endAdornment: <Button\n                                                variant=\"contained\"\n                                                disabled={!checkChain()}\n                                                onClick={fundRounds}>submit</Button>,\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Panel>\n                    </Grid>\n                }\n\n                <Grid item xs={12}>\n                    <Panel>\n                        <List disablePadding>\n                            <ListItem disablePadding>\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(raffle.totalWinnings)} ${raffle.tokens.jackpot.symbol}`}\n                                    primaryTypographyProps={{\n                                        style: {fontWeight: 700},\n                                        variant: 'h5',\n                                        textAlign: 'center'\n                                    }}\n                                    secondary=\"Total Winnings All-time\"\n                                    secondaryTypographyProps={{textAlign: 'center'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Panel>\n                </Grid>\n\n                {\n                    raffle.ticketCost !== 0 && <Grid item xs={12}>\n                        <Panel>\n                            {\n                                (timeToNextDraw(raffle.nextDraw) > 0) ?\n                                    <Typography variant=\"caption\" style={{\n                                        float: \"left\",\n                                        padding: '15px 15px 0 15px'\n                                    }}>Drawing in {drawingTime}</Typography>\n                                    : <Typography variant=\"caption\"\n                                                  style={{float: \"left\", padding: '15px 15px 0 15px'}}>Waiting for\n                                        Winner</Typography>\n                            }\n\n                            <Typography variant=\"caption\" style={{\n                                float: \"right\",\n                                padding: '15px 15px 0 15px'\n                            }}>Max Entries: {raffle.entriesAllowed} - Draw# {raffle.raffleID}</Typography>\n\n                            <List>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={getOccurrence(raffle.players, wallet.address)}\n                                        primaryTypographyProps={{\n                                            style: {fontWeight: 700},\n                                            variant: 'h5'\n                                        }}\n                                        secondary=\"My Entries\"/>\n                                    <ListItemText\n                                        primary={getOdds(raffle.players, wallet.address) + \"%\"}\n                                        primaryTypographyProps={{\n                                            style: {fontWeight: 700},\n                                            variant: 'h5'\n                                        }}\n                                        secondary=\"My Odds\"/>\n                                    <ListItemText\n                                        primary={`${CoineusCryptoFormat(raffle.jackpot)} ${raffle.tokens.jackpot.symbol}`}\n                                        primaryTypographyProps={{\n                                            style: {fontWeight: 700},\n                                            variant: 'h5',\n                                            textAlign: 'right'\n                                        }}\n                                        secondary={`${raffle.raffleType === 1 || raffle.raffleType === 3 ? '' : 'Current'} Jackpot`}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n\n                                <ListItem style={{padding: '0 16px'}}>\n                                    <Slider\n                                        step={raffle.entriesAllowed - getOccurrence(raffle.players, wallet.address) > 10 ? 10 : 1}\n                                        marks\n                                        min={1}\n                                        max={raffle.entriesAllowed - getOccurrence(raffle.players, wallet.address)}\n                                        value={numTickets}\n                                        onChange={(ev, val) => {\n                                            setNumTickets(val)\n                                        }}\n                                    />\n                                </ListItem>\n\n                                <ListItem>\n                                    {\n                                        checkChain()\n                                            ?\n                                            <Grid container spacing={2}>\n                                                <Grid item xs={12}>\n                                                    <Button\n                                                        fullWidth\n                                                        variant=\"contained\"\n                                                        disabled={pending || getButtonDisabled()}\n                                                        onClick={raffle.tokens.entry.id === \"0x0000000000000000000000000000000000000000\" ? () => enterNativeMulti(numTickets) : () => enterMulti(numTickets)}\n                                                    >\n                                                        {getButtonLabel(numTickets)}\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                            :\n                                            <Button\n                                                fullWidth\n                                                variant=\"contained\"\n                                                onClick={changeNetwork}>CHANGE NETWORK</Button>\n                                    }\n                                </ListItem>\n\n                                {\n                                    (timeToNextDraw(raffle.nextDraw) < 0) && <ListItem>\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            disabled={(raffle.raffleType === 1 || raffle.raffleType === 3) &&\n                                                (raffle.roundsRemaining - 1) === 0 && wallet.address !== \"0xb80267eA7fa368374ee4d4Bf10044778232AdEFe\"}\n                                            onClick={pickWinner}>PICK WINNER</Button>\n                                    </ListItem>\n                                }\n\n                                {\n                                    (timeToNextDraw(raffle.nextDraw) < 0) &&\n                                    (raffle.raffleType === 1 || raffle.raffleType === 3) &&\n                                    (raffle.roundsRemaining - 1) === 0 && <ListItem>\n                                        <Typography variant=\"caption\">This Raffle has run out of Jackpot Tokens for the next\n                                            round to start. Please wait for admin to pick winner.</Typography>\n                                    </ListItem>\n                                }\n\n                            </List>\n                        </Panel>\n                    </Grid>\n                }\n\n\n                <Grid item xs={12}>\n                    <Panel>\n                        <List>\n                            <ListItem>\n                                <ListItemText\n                                    primary={`0X...${raffle.previousWinner.substr(-6)}`}\n                                    secondary=\"Previous Winner\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(raffle.previousJackpot / (10 ** raffle.tokens.jackpot.decimals))} ${raffle.tokens.jackpot.symbol}`}\n                                    primaryTypographyProps={{textAlign: 'right'}}\n                                    secondary=\"Amount\"\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </List>\n                    </Panel>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Panel>\n                        <List>\n                            <Typography style={{marginLeft: 15}}>All-time Stats</Typography>\n                            <ListItem>\n                                <ListItemText\n                                    primary={raffle.playerStats.entries}\n                                    secondary=\"My Entries\"\n                                />\n                                <ListItemText\n                                    primary={raffle.playerStats.wins}\n                                    secondary=\"My Wins\"\n                                />\n                                <ListItemText\n                                    primary={`${CoineusCryptoFormat(raffle.playerStats.winnings / (10 ** raffle.tokens.jackpot.decimals))} ${raffle.tokens.jackpot.symbol}`}\n                                    secondary=\"My Winnings\"\n                                />\n                            </ListItem>\n                        </List>\n                    </Panel>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Panel style={{padding: 15}}>\n                        <List dense disablePadding>\n                            {\n                                raffle.players.length > 0 && <>\n                                    <Typography>{raffle.players.length} Entries</Typography>\n                                    {getPlayersList(raffle.players, wallet.address)}\n                                </>\n                            }\n\n                            {\n                                raffle.players.length <= 0 && <ListItem>\n                                    <ListItemText primary=\"No Entries\"/>\n                                </ListItem>\n                            }\n\n                        </List>\n                    </Panel>\n                </Grid>\n\n                {\n                    (raffle.raffleType === 1 || raffle.raffleType === 3) && <Grid item xs={12}>\n                        <Panel style={{padding: 15}}>\n                            <List dense disablePadding>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={`${raffle.jackpotTokenBalance} ${raffle.tokens.jackpot.symbol}`}\n                                        secondary=\"Contract Balance\"\n                                    />\n                                    <ListItemText\n                                        primary={raffle.roundsRemaining}\n                                        secondary=\"Rounds Funded\"\n                                    />\n                                </ListItem>\n                            </List>\n                        </Panel>\n                    </Grid>\n                }\n            </Grid>\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n        </Container>\n    );\n}\n\nfunction timeToNextDraw(d) {\n    return d - new Date();\n}\n\nfunction msToHMS(ms) {\n    let h = ms / 3.6e6 | 0;\n    let m = (ms % 3.6e6) / 6e4 | 0;\n    let s = (ms % 6e4) / 1e3 | 0;\n    return `${h}:${('' + m).padStart(2, '0')}:${('' + s).padStart(2, '0')}`;\n}\n\nfunction getOccurrence(array, value) {\n    return array.filter((v) => (v === value)).length;\n}\n\nfunction getOdds(array, value) {\n    if (array.length === 0) return 0;\n\n    return ((getOccurrence(array, value) / array.length) * 100).toFixed(0);\n}\n\nfunction getPlayersList(players, wallet) {\n\n    let list = [];\n    let currentPlayer, nextPlayer, found = 1;\n\n    players.map((player, i) => {\n        currentPlayer = player;\n        nextPlayer = players[i + 1];\n\n\n        if (currentPlayer === nextPlayer) {\n            found++;\n        } else {\n\n            list.push(<ListItem key={player + \"\" + i} disablePadding>\n                <ListItemText\n                    primary={`0x..${player.substr(-6)} ${found > 1 ? found + \"x\" : \"\"}`}\n                    primaryTypographyProps={{\n                        color: player.toLowerCase() === wallet.toLowerCase() ? \"secondary\" : \"\",\n                        variant: \"caption\",\n                        fontFamily: 'monospace'\n                    }}\n                />\n            </ListItem>);\n\n            found = 1;\n        }\n        return player;\n    });\n    return list;\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {supply, burned} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aBurned = 360 * (burned/supply) * (Math.PI / 180);\n\n    const angles = {\n\n        burnedStart: 0,\n        burnedEnd: aBurned,\n\n        supplyStart:  aBurned + divider,\n        supplyEnd: 360 * (Math.PI / 180) - divider,\n    }\n\n\n    const colors = {\n        supply: '#DADADA',\n        burned: '#fa5700'\n    }\n\n    if (\n        supply === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {((burned/supply) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={burned}\n                                  label=\"BURNED\"/>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply - burned}\n                                  label=\"CIRCULATION\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, Tab, Tabs} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\n\nimport '../../node_modules/react-vis/dist/style.css';\n\nconst web3 = new Web3(\"https://bsc-dataseed1.binance.org/\");\nconst lit_contract = new web3.eth.Contract(coineus_abi, \"0xbC8F89861737C3B8c60a05165E0a5C5B8A137fAc\");\n\nconst calls = [\n    lit_contract.methods.totalSupply().call\n];\n\n\nconst web3FUSE = new Web3(\"https://rpc.fuse.io/\");\nconst lit_fuse_contract = new web3FUSE.eth.Contract(coineus_abi, \"0xF2C6C1AA2bf8ec40F564Ea8A483F64907ea37A3F\");\n\nconst callsFUSE = [\n    lit_fuse_contract.methods.totalSupply().call\n];\n\nexport default function Stats() {\n\n    const [supply, setSupply] = useState(0);\n    const [burned, setBurned] = useState(0);\n    const [chainTab, setChainTab] = useState('fuse');\n\n    const [supplyFuse, setSupplyFuse] = useState(0);\n    const [burnedFuse, setBurnedFuse] = useState(0);\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                bbks_supply\n            ] = resp;\n\n            setSupply(10000000);\n            setBurned(10000000 - (bbks_supply / (10 ** 9)));\n        })\n    }, [])\n\n    useEffect(() => {\n        makeBatchRequest(web3FUSE, callsFUSE).then(resp => {\n            let [\n                bbks_supply\n            ] = resp;\n\n            setSupplyFuse(10000000);\n            setBurnedFuse(10000000 - (bbks_supply / (10 ** 18)));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"fuse\" value=\"fuse\" label=\"FUSE\"/>\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                    </Tabs>\n                </Grid>\n\n\n                {\n                    chainTab === 'fuse' && <>\n\n                        <Grid item xs={12}>\n                            <BurnSupply\n                                supply={supplyFuse}\n                                burned={burnedFuse}\n                            />\n                        </Grid>\n                    </>\n                }\n                {\n                    chainTab === 'bnb' && <>{/*<Grid item xs={12}>*/}\n                        {/*    <Paper style={{padding: 15}}>*/}\n                        {/*        <FlexibleWidthXYPlot*/}\n                        {/*            height={150}*/}\n                        {/*            strokeWidth={3}*/}\n                        {/*            margin={{left: 0, right: 0, top: 0, bottom: 0}}*/}\n                        {/*            onMouseLeave={onMouseLeave}*/}\n                        {/*        >*/}\n                        {/*            <LineSeries color=\"#DADADA\" fill=\"transparent\" data={chartData} onNearestX={onNearestX}/>*/}\n                        {/*            <Crosshair*/}\n                        {/*                values={crosshairValues}*/}\n                        {/*                className={'test-class-name'}*/}\n                        {/*                style={{*/}\n                        {/*                    line:{background: \"#fff\"}*/}\n                        {/*                }}*/}\n                        {/*                itemsFormat={(values) => {*/}\n                        {/*                    return values.map((v, i) => {*/}\n                        {/*                        return {*/}\n                        {/*                            title: \"Price\",*/}\n                        {/*                            value: v.y*/}\n                        {/*                        };*/}\n                        {/*                    });*/}\n                        {/*                }}*/}\n                        {/*                titleFormat={(values) => {*/}\n                        {/*                    return {*/}\n                        {/*                        title: \"Date\",*/}\n                        {/*                        value: values[0].x.toLocaleDateString()*/}\n                        {/*                    };*/}\n                        {/*                }}*/}\n                        {/*            />*/}\n                        {/*        </FlexibleWidthXYPlot>*/}\n                        {/*    </Paper>*/}\n                        {/*</Grid>*/}\n                        <Grid item xs={12}>\n                            <BurnSupply\n                                supply={supply}\n                                burned={burned}\n                            />\n                        </Grid>\n                    </>\n                }\n\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar, BottomNavigation, BottomNavigationAction, Button,\n    Container,\n    CssBaseline,\n    Grid, Link, ListItem, ListItemText, Paper,\n    ThemeProvider, Toolbar,\n} from \"@mui/material\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport Web3 from \"web3\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport getUserBalances from \"./utils/get_balances\";\nimport theme from \"./theme\";\nimport {HashRouter as Router, Link as RouterLink, Route, Routes} from \"react-router-dom\";\nimport Swap from \"./views/Swap\";\nimport LightningRaffles from \"./views/Raffles/LightningRaffles\";\nimport LightningRaffleGame from \"./views/Raffles/LightningRaffleGame\";\n\nimport logo from \"./images/logo192.png\";\n\nimport BoltIcon from '@mui/icons-material/Bolt';\nimport InsightsIcon from '@mui/icons-material/Insights';\nimport Stats from \"./views/Stats\";\n\nfunction LightningStrikes() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [navTab, setNavTab] = useState(0);\n\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(() => getPairPrices(), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(() => getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Container maxWidth={'xs'} style={{\n                height: '100%'\n            }}>\n\n                <Router>\n                    <AppBar>\n                        <Toolbar>\n                            <RouterLink\n                                to={`/`}\n                                style={{textDecoration: 'none', display: 'flex'}}\n                            >\n                                <Avatar src={logo} height={40}/>\n                            </RouterLink>\n                            <ListItem style={{width:200}}>\n                                <ListItemText\n                                    primary=\"Lightning Strikes\"\n                                    secondary={<Link href=\"https://coineus.app\" target=\"_blank\" style={{ textDecoration:'none'}}>A Coineus Project</Link>}\n                                    primaryTypographyProps={{style:{fontSize: 18, fontFamily: \"'Caesar Dressing', cursive\"}}}\n                                    secondaryTypographyProps={{style:{fontSize:11}}}\n                                />\n                            </ListItem>\n                                <div style={{flexGrow: 1}}/>\n                                {\n                                    wallet.address ?\n                                        <Button\n                                            size=\"small\"\n                                            onClick={() => {\n                                                clearWallet();\n                                            }}\n                                        >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                        :\n                                        <Button\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() => connectWallet()}>Connect</Button>\n                                }\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container style={{marginTop: 85, paddingBottom: 10}}>\n                        <Grid item xs={12}>\n                            <Routes>\n                                <Route\n                                    path={`/`}\n                                    exact={true}\n                                    element={<LightningRaffles/>}\n                                />\n                                <Route\n                                    path={`/swap`}\n                                    exact={true}\n                                    element={<Swap/>}\n                                />\n                                <Route\n                                    path={`/raffles`}\n                                    exact={true}\n                                    element={<LightningRaffles/>}\n                                />\n                                <Route\n                                    path={`/raffles/:network/:contract_address`}\n                                    exact={true}\n                                    element={<LightningRaffleGame/>}\n                                />\n                                <Route\n                                    path={`/stats`}\n                                    exact={true}\n                                    element={<Stats/>}\n                                />\n                            </Routes>\n                        </Grid>\n                    </Grid>\n\n                    <Paper sx={{position: 'fixed', bottom: 0, left: 0, right: 0}} elevation={3}>\n\n                        <BottomNavigation\n                            showLabels\n                            value={navTab}\n                            onChange={(event, newValue) => {\n                                setNavTab(newValue);\n                            }}\n                        >\n                            <BottomNavigationAction label=\"Home\" icon={<BoltIcon/>} to={`/`} component={RouterLink}/>\n                            <BottomNavigationAction label=\"Stats\" icon={<InsightsIcon/>} to={`/stats`} component={RouterLink}/>\n                        </BottomNavigation>\n                    </Paper>\n\n                </Router>\n\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default LightningStrikes;\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LightningStrikes from \"./LightningStrikes\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <LightningStrikes/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}